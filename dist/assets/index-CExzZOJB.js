const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/SoundManager-48crnWyV.js","assets/howler-BIEUF6u0.js","assets/SoundSettingsPanel-ynoVjs5B.js"])))=>i.map(i=>d[i]);
(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();const fe="modulepreload",ue=function(h){return"/"+h},se={},z=function(e,t,s){let i=Promise.resolve();if(t&&t.length>0){let o=function(c){return Promise.all(c.map(d=>Promise.resolve(d).then(p=>({status:"fulfilled",value:p}),p=>({status:"rejected",reason:p}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),r=a?.nonce||a?.getAttribute("nonce");i=o(t.map(c=>{if(c=ue(c),c in se)return;se[c]=!0;const d=c.endsWith(".css"),p=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${p}`))return;const f=document.createElement("link");if(f.rel=d?"stylesheet":fe,d||(f.as="script"),f.crossOrigin="",f.href=c,r&&f.setAttribute("nonce",r),document.head.appendChild(f),d)return new Promise((u,g)=>{f.addEventListener("load",u),f.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${c}`)))})}))}function n(a){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=a,window.dispatchEvent(r),!r.defaultPrevented)throw a}return i.then(a=>{for(const r of a||[])r.status==="rejected"&&n(r.reason);return e().catch(n)})},x={};window.addEventListener("keydown",h=>{x[h.key.toLowerCase()]=!0});window.addEventListener("keyup",h=>{x[h.key.toLowerCase()]=!1});window.addEventListener("mousemove",h=>{h.clientX,h.clientY});window.addEventListener("mousedown",()=>!0);window.addEventListener("mouseup",()=>!1);var l=(h=>(h[h.PISTOL=0]="PISTOL",h[h.SHOTGUN=1]="SHOTGUN",h[h.TRI_SHOT=2]="TRI_SHOT",h[h.RAPID=3]="RAPID",h[h.LASER=4]="LASER",h[h.BEAM=5]="BEAM",h[h.RICOCHET=6]="RICOCHET",h[h.HOMING=7]="HOMING",h[h.RAILGUN=8]="RAILGUN",h[h.PLASMA=9]="PLASMA",h[h.RUNNER_GUN=10]="RUNNER_GUN",h[h.WARRIOR_CANNON=11]="WARRIOR_CANNON",h[h.SORCERER_ORB=12]="SORCERER_ORB",h[h.SHADOW_DAGGER=13]="SHADOW_DAGGER",h[h.BIO_TOXIN=14]="BIO_TOXIN",h[h.HACKER_VIRUS=15]="HACKER_VIRUS",h[h.GUNNER_MINIGUN=16]="GUNNER_MINIGUN",h[h.PSIONIC_WAVE=17]="PSIONIC_WAVE",h[h.SCAVENGER_SLING=18]="SCAVENGER_SLING",h[h.NOMAD_NEURAL=19]="NOMAD_NEURAL",h[h.GHOST_SNIPER=20]="GHOST_SNIPER",h[h.MECH_MORTAR=21]="MECH_MORTAR",h))(l||{});const F={[l.PISTOL]:{id:l.PISTOL,name:"Desert Eagle",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:80,salvo:1,spread:0,projectile:"bullet_cyan",speed:12,range:440,maxLevel:8,damage:56,getLevelStats(h){return{damage:56+h*20,speed:12+h*1.5,recoil:1+h*.25,cooldown:Math.max(40,80-h*5),projectileSize:7+h*1.2,explosionRadius:100+h*10}},projectileVisual:{type:"bullet",sprite:"/assets/projectiles/bullet_cyan.png",size:7,trailColor:"rgba(255,215,0,0.5)",trailLength:18},explosionRadius:100,traits:["Heavy","High Damage","Strong Recoil","Large Caliber"],evolution:{evolvedWeaponType:l.SHOTGUN,requiredPassive:"Bullet Velocity"},isClassWeapon:!1,knockback:32},[l.SHOTGUN]:{id:l.SHOTGUN,name:"Shotgun",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:95,salvo:5,spread:.22,projectile:"bullet_brown",speed:5.2,range:200,maxLevel:8,damage:9,projectileVisual:{type:"bullet",sprite:"/assets/projectiles/bullet_cyan.png",size:10,trailColor:"rgba(160,82,45,0.5)",trailLength:10},traits:["High Damage","Short Range","Tight Spread"],isClassWeapon:!1,knockback:48},[l.TRI_SHOT]:{id:l.TRI_SHOT,name:"Triple Crossbow",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:110,salvo:3,spread:.16,projectile:"arrow_heavy",speed:8.2,range:620,maxLevel:5,damage:18,projectileVisual:{type:"arrow",color:"#B8860B",size:18,glowColor:"#FFD700",glowRadius:12,trailColor:"rgba(184,134,11,0.5)",trailLength:16},traits:["Piercing","Heavy Arrow","Long Cooldown","High Damage"],isClassWeapon:!1},[l.RAPID]:{id:l.RAPID,name:"Rapid",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:13,salvo:1,spread:0,projectile:"bullet_cyan",speed:10.2,range:360,maxLevel:5,damage:4,projectileVisual:{type:"bullet",sprite:"/assets/projectiles/bullet_cyan.png",size:7,trailColor:"rgba(0,255,0,0.5)",trailLength:10},traits:["Fast","Low Damage","Quick Reload"],isClassWeapon:!1},[l.LASER]:{id:l.LASER,name:"Laser Blaster",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:16,salvo:2,spread:.07,projectile:"bullet_red",speed:19,range:340,maxLevel:5,damage:7,projectileVisual:{type:"bullet",color:"#FF2D2D",size:8,glowColor:"#FF6666",glowRadius:9,trailColor:"rgba(255,45,45,0.5)",trailLength:12},traits:["Blaster","Fast Projectile","Short Burst","Moderate Damage"],isClassWeapon:!1},[l.BEAM]:{id:l.BEAM,name:"Beam",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:50,salvo:1,spread:0,projectile:"bullet_cyan",speed:17.5,range:700,maxLevel:5,damage:30,projectileVisual:{type:"beam",color:"#8000FF",thickness:16,length:80,glowColor:"#FF00FF",glowRadius:32,trailColor:"#FFD700",trailLength:30},traits:["Boss Beam","Epic Glow","Animated Core"],isClassWeapon:!1,knockback:8},[l.RICOCHET]:{id:l.RICOCHET,name:"Ricochet",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:70,salvo:1,spread:.05,projectile:"bullet_cyan",speed:7,range:420,maxLevel:5,damage:12,projectileVisual:{type:"bullet",sprite:"/assets/projectiles/bullet_cyan.png",size:10,trailColor:"rgba(0,128,255,0.5)",trailLength:8},traits:["Bounces Between Enemies","Locks On Next Target","Max 3 Bounces","Low Damage"],isClassWeapon:!1,knockback:18},[l.HOMING]:{id:l.HOMING,name:"Kamikaze Drone",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:120,salvo:1,spread:0,projectile:"drone_blue",speed:4.9,range:150,maxLevel:5,damage:25,projectileVisual:{type:"drone",color:"#00BFFF",size:14,glowColor:"#00BFFF",glowRadius:10,trailColor:"rgba(0,191,255,0.4)",trailLength:18},traits:["Homing","Circles Player","Explodes on Contact","Kamikaze"],isClassWeapon:!1,knockback:12},[l.RAILGUN]:{id:l.RAILGUN,name:"Railgun",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:120,salvo:1,spread:0,projectile:"railgun_orb",speed:0,range:900,maxLevel:5,damage:50,projectileVisual:{type:"plasma",color:"#00FFFF",size:28,glowColor:"#00FFFF",glowRadius:40,trailColor:"#FFD700",trailLength:40},traits:["Visible Charging Orb","2s Charge Time","Fires Monster Beam","High Damage","Boss"],beamVisual:{type:"beam",color:"#FFFFFF",thickness:20,length:260,glowColor:"#FF00FF",glowRadius:64,trailColor:"#FFD700",trailLength:60},isClassWeapon:!1},[l.PLASMA]:{id:l.PLASMA,name:"Plasma",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:60,salvo:4,spread:.25,projectile:"bullet_cyan",speed:11.2,range:350,maxLevel:5,damage:10,projectileVisual:{type:"plasma",color:"#00FFFF",size:12,glowColor:"#00FFFF",glowRadius:10,trailColor:"rgba(0,255,255,0.3)",trailLength:5},isClassWeapon:!1},[l.RUNNER_GUN]:{id:l.RUNNER_GUN,name:"Runner Gun",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:12,salvo:2,spread:.12,projectile:"bullet_cyan",speed:10.5,range:300,maxLevel:5,damage:7,projectileVisual:{type:"bullet",sprite:"/assets/projectiles/bullet_cyan.png",size:5,trailColor:"rgba(0,255,255,0.5)",trailLength:12},traits:["Spray","Fast","Low Damage"],isClassWeapon:!0,knockback:5},[l.WARRIOR_CANNON]:{id:l.WARRIOR_CANNON,name:"Warrior Cannon",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:60,salvo:1,spread:0,projectile:"bullet_red",speed:5.6,range:250,maxLevel:5,damage:40,projectileVisual:{type:"explosive",color:"#FF0000",size:14,glowColor:"#FF0000",glowRadius:12},traits:["Explosive","High Damage","Slow"],isClassWeapon:!0},[l.SORCERER_ORB]:{id:l.SORCERER_ORB,name:"Arcane Orb",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:144,salvo:1,spread:0,projectile:"orb_yellow",speed:3.2,range:1200,maxLevel:5,damage:25,projectileVisual:{type:"bullet",color:"#FFD700",size:10,glowColor:"#FFD700",glowRadius:18},traits:["Piercing","Homing","Needle","Returns","Runs Through Enemies","Snake","Ricochet"],isClassWeapon:!0},[l.SHADOW_DAGGER]:{id:l.SHADOW_DAGGER,name:"Shadow Dagger",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:18,salvo:1,spread:0,projectile:"dagger_purple",speed:12.6,range:420,maxLevel:5,damage:18,projectileVisual:{type:"ricochet",color:"#800080",size:7,glowColor:"#800080",glowRadius:8},traits:["Ricochet","Critical","Fast"],isClassWeapon:!0,knockback:20},[l.BIO_TOXIN]:{id:l.BIO_TOXIN,name:"Bio Toxin",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:88,salvo:1,spread:0,projectile:"toxin_green",speed:3.5,range:260,maxLevel:5,damage:10,projectileVisual:{type:"slime",color:"#00FF00",size:13,glowColor:"#00FF00",glowRadius:10},traits:["Poison","Area","Debuff"],isClassWeapon:!0},[l.HACKER_VIRUS]:{id:l.HACKER_VIRUS,name:"Hacker Virus",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:32,salvo:1,spread:0,projectile:"virus_orange",speed:8.4,range:340,maxLevel:5,damage:12,projectileVisual:{type:"plasma",color:"#FFA500",size:10,glowColor:"#FFA500",glowRadius:8},traits:["EMP","Disrupt","Pierces"],isClassWeapon:!0},[l.GUNNER_MINIGUN]:{id:l.GUNNER_MINIGUN,name:"Minigun",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:10,salvo:1,spread:.28,projectile:"bullet_cyan",speed:7.7,range:320,maxLevel:5,damage:6,projectileVisual:{type:"bullet",sprite:"/assets/projectiles/bullet_cyan.png",size:6,trailColor:"rgba(165,42,42,0.5)",trailLength:8},traits:["Spray","Rapid","Lower Damage","Wider Spread","Balanced"],isClassWeapon:!0},[l.PSIONIC_WAVE]:{id:l.PSIONIC_WAVE,name:"Psionic Wave",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:28,salvo:1,spread:0,projectile:"wave_pink",speed:9.1,range:500,maxLevel:5,damage:22,projectileVisual:{type:"beam",color:"#FFC0CB",thickness:14,length:120,glowColor:"#FF00FF",glowRadius:40,trailColor:"#FFD700",trailLength:40},traits:["Boss Wave","Epic Glow","Animated Core","Pierces","Area"],isClassWeapon:!0},[l.SCAVENGER_SLING]:{id:l.SCAVENGER_SLING,name:"Scavenger Sling",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:38,salvo:1,spread:0,projectile:"rock_gray",speed:7,range:300,maxLevel:5,damage:15,projectileVisual:{type:"bullet",color:"#808080",size:10,glowColor:"#808080",glowRadius:7},traits:["Random","Bounces","Medium Damage"],isClassWeapon:!0,knockback:24},[l.NOMAD_NEURAL]:{id:l.NOMAD_NEURAL,name:"Neural Pulse",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:24,salvo:1,spread:0,projectile:"pulse_teal",speed:9.8,range:400,maxLevel:5,damage:14,projectileVisual:{type:"plasma",color:"#008080",size:11,glowColor:"#008080",glowRadius:9},traits:["Pulse","Stun","Pierces"],isClassWeapon:!0},[l.GHOST_SNIPER]:{id:l.GHOST_SNIPER,name:"Ghost Sniper",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:110,salvo:1,spread:0,projectile:"sniper_white",speed:22.4,range:1200,maxLevel:5,damage:60,projectileVisual:{type:"laser",color:"#FFFFFF",thickness:2,length:140,glowColor:"#FFFFFF",glowRadius:18},traits:["Laser","Critical","Long Range"],isClassWeapon:!0},[l.MECH_MORTAR]:{id:l.MECH_MORTAR,name:"Mech Mortar",icon:"/assets/ui/icons/upgrade_speed.png",cooldown:90,salvo:1,spread:0,projectile:"bullet_gold",speed:7,damage:60,range:420,maxLevel:8,projectileVisual:{type:"bullet",color:"#FFD700",size:10,glowColor:"#FFD700",glowRadius:8},explosionRadius:200,traits:["Heavy","High Damage","Strong Recoil","Large Caliber"],isClassWeapon:!0}},D=[{id:0,name:"Speed Boost",icon:"/assets/ui/icons/passive_speed.png",description:"Increase movement speed",maxLevel:5},{id:1,name:"Max HP",icon:"/assets/ui/icons/passive_hp.png",description:"Increase maximum HP",maxLevel:5},{id:2,name:"Damage Up",icon:"/assets/ui/icons/passive_damage.png",description:"Increase bullet damage",maxLevel:5},{id:3,name:"Fire Rate",icon:"/assets/ui/icons/passive_fire.png",description:"Decrease weapon cooldown",maxLevel:5},{id:4,name:"AOE On Kill",icon:"/assets/ui/icons/passive_aoe.png",description:"Small explosion on enemy death",maxLevel:1},{id:5,name:"Magnet",icon:"/assets/ui/icons/passive_magnet.png",description:"Attract nearby gems",maxLevel:3},{id:6,name:"Shield",icon:"/assets/ui/icons/passive_shield.png",description:"Chance to block damage",maxLevel:3},{id:7,name:"Crit",icon:"/assets/ui/icons/passive_crit.png",description:"Chance for critical hits",maxLevel:5},{id:8,name:"Piercing",icon:"/assets/ui/icons/passive_pierce.png",description:"Bullets pierce enemies",maxLevel:1},{id:9,name:"Regen",icon:"/assets/ui/icons/passive_regen.png",description:"Regenerate HP over time",maxLevel:5}];function ie(h,e,t){switch(e){case 0:h.speed=2+t*.5;break;case 1:h.maxHp=100+t*20,h.hp=Math.min(h.maxHp,h.hp+20);break;case 2:h.bulletDamage=10+t*2;break;case 3:h.fireRateModifier=1+t*.1;break;case 4:h.hasAoeOnKill=!0;break;case 5:h.magnetRadius=50+t*10;break;case 6:h.shieldChance=Math.min(.5,t*.05);break;case 7:h.critChance=Math.min(.5,t*.04),h.critMultiplier=1.5+t*.1;break;case 8:h.piercing=!0;break;case 9:h.regen=t*.5;break}}const k=class k{static setLogLevel(e){k.logLevel=e}static addTelemetryHook(e){k.telemetryHooks.push(e)}static shouldLog(e){const t={debug:0,info:1,warn:2,error:3};return t[e]>=t[k.logLevel]}static log(e,t,...s){k.shouldLog(e)&&console[e](`[${e.toUpperCase()}] ${t}`,...s),k.telemetryHooks.forEach(i=>i(e,t,...s))}static debug(e,...t){k.log("debug",e,...t)}static info(e,...t){k.log("info",e,...t)}static warn(e,...t){k.log("warn",e,...t)}static error(e,...t){k.log("error",e,...t)}};k.logLevel="debug",k.telemetryHooks=[];let m=k;class ae{constructor(e,t,s){if(this.isFlipped=!1,this.flipTimer=0,this.radius=8,this.size=64,this.speed=4,this.hp=100,this.maxHp=100,this.strength=5,this.intelligence=5,this.agility=5,this.luck=5,this.defense=5,this.regen=0,this.shape="circle",this.color="#00FFFF",this._exp=0,this.level=1,this.activeWeapons=new Map,this.activePassives=[],this.upgrades=[],this.shootCooldowns=new Map,this.enemyProvider=()=>[],this.fireRateModifier=1,this.bulletDamage=10,this.magnetRadius=50,this.attackSpeed=1,this.abilityCooldown=0,this.abilityTicks=0,this.abilityDuration=180,this.abilityActive=!1,this.currentFrame=0,this.frameTimer=0,this.animationSpeed=8,this.animationFrames=4,this.vx=0,this.vy=0,this.rotation=0,this.x=e,this.y=t,this.baseSpeed=this.speed,s&&(this.characterData=s,this.applyCharacterData(s),this.activeWeapons.clear(),s.id==="psionic_weaver"?this.activeWeapons.set(l.PSIONIC_WAVE,1):s.id==="bio_engineer"?this.activeWeapons.set(l.BIO_TOXIN,1):s.defaultWeapon!==void 0&&this.activeWeapons.set(s.defaultWeapon,1)),this.activeWeapons.size===0)if(this.characterData&&Array.isArray(this.characterData.weaponTypes)&&this.characterData.weaponTypes.length>0)this.activeWeapons.set(this.characterData.weaponTypes[0],1),m.warn("[Player] No defaultWeapon found, fallback to first class weapon.");else{const i=Object.values(l).filter(n=>typeof n=="number");i.length>0&&(this.activeWeapons.set(i[0],1),m.warn("[Player] No defaultWeapon or class weapon found, fallback to first WeaponType."))}window.addEventListener("chestPickedUp",this.handleChestPickup.bind(this))}handleChestPickup(e){const s=e.detail?.reward;s&&(s.exp&&this.gainExp(s.exp),s.weaponType!==void 0&&this.addWeapon(s.weaponType),s.passiveType&&this.addPassive(s.passiveType),s.hp&&(this.hp=Math.min(this.hp+s.hp,this.maxHp))),m.info(`[Player.handleChestPickup] Chest picked up. Reward: ${JSON.stringify(s)}`)}resetState(){this.hp=this.maxHp,this._exp=0,this.level=1,this.activeWeapons.clear(),this.activePassives=[],this.upgrades=[],this.shootCooldowns.clear(),this.activeWeapons.clear();const e=Object.values(l).filter(t=>typeof t=="number");for(const t of e)this.activeWeapons.set(t,1)}get exp(){return this._exp}set exp(e){this._exp=e,this.levelUpIfNeeded()}levelUpIfNeeded(){for(;this._exp>=this.getNextExp();)this._exp-=this.getNextExp(),this.level++,window.dispatchEvent(new CustomEvent("levelup"))}getNextExp(){return 4+(this.level-1)*3}gainExp(e){this.exp+=e}setEnemyProvider(e){this.enemyProvider=e}addWeapon(e){const t=F[e];if(!t||!this.activeWeapons.has(e)&&this.activeWeapons.size>=5)return;let s=this.activeWeapons.get(e)||0;s<t.maxLevel?(this.activeWeapons.set(e,s+1),this.upgrades.push(`Weapon Upgrade: ${t.name} Lv.${s+1}`),s+1===t.maxLevel&&t.evolution&&this.tryEvolveWeapon(e,t.evolution.evolvedWeaponType,t.evolution.requiredPassive)):s===t.maxLevel&&t.evolution&&this.tryEvolveWeapon(e,t.evolution.evolvedWeaponType,t.evolution.requiredPassive),this.shootCooldowns.has(e)||this.shootCooldowns.set(e,0)}tryEvolveWeapon(e,t,s){const i=F[e],n=F[t];if(!i||!n){m.error(`Evolution failed: Missing weapon spec for ${e} or ${t}`);return}const a=this.activePassives.find(o=>o.type===s),r=D.find(o=>o.name===s);a&&r&&a.level>=r.maxLevel&&(m.info(`Evolving ${i.name} to ${n.name}!`),this.activeWeapons.delete(e),this.shootCooldowns.delete(e),this.activeWeapons.set(t,1),this.shootCooldowns.set(t,0),this.upgrades.push(`Weapon Evolution: ${i.name} -> ${n.name}`),window.dispatchEvent(new CustomEvent("weaponEvolved",{detail:{baseWeaponType:e,evolvedWeaponType:t}})))}hasPassiveMaxLevel(e){const t=this.activePassives.find(i=>i.type===e),s=D.find(i=>i.name===e);return!!(t&&s&&t.level>=s.maxLevel)}addPassive(e){const t=this.activePassives.find(i=>i.type===e),s=D.find(i=>i.name===e);if(!s){m.warn(`Attempted to add unknown passive type: ${e}`);return}if(t)t.level<s.maxLevel&&(t.level++,ie(this,s.id,t.level),this.upgrades.push(`Passive Upgrade: ${e} Lv.${t.level}`),m.info(`Passive ${e} leveled up to Lv.${t.level}`));else{const i={type:e,level:1};this.activePassives.push(i),ie(this,s.id,i.level),this.upgrades.push(`Passive Unlock: ${e} Lv.1`),m.info(`Passive ${e} unlocked at Lv.1`)}}setGameContext(e){this.gameContext=e}findNearestEnemy(){let e=null;if(this.gameContext&&typeof this.gameContext.bossManager?.getActiveBoss=="function"&&(e=this.gameContext.bossManager.getActiveBoss(),e&&e.active&&e.hp>0&&e.state==="ACTIVE"))return e;const t=this.enemyProvider?this.enemyProvider():[];let s=null,i=Number.POSITIVE_INFINITY;for(const n of t){if(!n||n.active===!1||n.hp!=null&&n.hp<=0)continue;const a=(n.x??0)-(this.x??0),r=(n.y??0)-(this.y??0),o=a*a+r*r;o<i&&(i=o,s=n)}return s}shootAt(e,t){if(this.gameContext?.bulletManager){const s=this.gameContext.bulletManager,i=F[t];if(i){const n=e.x-this.x,a=e.y-this.y,r=Math.atan2(a,n);i.speed;const o=i.salvo,c=i.spread;let d=this.bulletDamage;this.characterData&&t!==this.characterData.defaultWeapon&&(d=10);for(let p=0;p<o;p++){const f=r+(p-(o-1)/2)*c;s.spawnBullet(this.x,this.y,this.x+Math.cos(f)*100,this.y+Math.sin(f)*100,t,d)}}else m.warn(`[Player.shootAt] No weapon spec found for weaponType: ${t}`)}else m.warn("[Player.shootAt] No bulletManager in gameContext")}update(e){if(window.navigator.userAgent.includes("Mobile"))return;let t=0,s=0;if((x.arrowup||x.w)&&(s-=1),(x.arrowdown||x.s)&&(s+=1),(x.arrowleft||x.a)&&(t-=1),(x.arrowright||x.d)&&(t+=1),t!==0||s!==0){const a=Math.sqrt(t*t+s*s),r=t/a,o=s/a;this.x+=r*this.speed,this.y+=o*this.speed,this.frameTimer++,this.flipTimer++,this.flipTimer>=12&&(this.isFlipped=!this.isFlipped,this.flipTimer=0),this.frameTimer>=60/this.animationSpeed&&(this.currentFrame=(this.currentFrame+1)%this.animationFrames,this.frameTimer=0),this.gameContext?.particleManager&&this.frameTimer%8===0&&this.gameContext.particleManager.spawn(this.x,this.y+this.radius/2,1,"#00FFFF")}else this.currentFrame=0,this.frameTimer=0,this.flipTimer=0,this.isFlipped=!1,this.vx=0,this.vy=0;this.gameContext?.worldH&&(this.y=Math.max(this.radius,Math.min(this.y,this.gameContext.worldH-this.radius)));let i=this.findNearestEnemy();i&&(this.rotation=Math.atan2(i.y-this.y,i.x-this.x)-Math.PI/2),this.activeWeapons.forEach((a,r)=>{let o=this.shootCooldowns.get(r)??0;if(o--,o<0&&(o=0),this.shootCooldowns.set(r,o),o<=0){const c=i;if(c){this.shootAt(c,r);const p=F[r]?.cooldown??10,f=Math.max(1,Math.floor(p/(this.fireRateModifier*this.attackSpeed)));this.shootCooldowns.set(r,f)}}});const n=this.gameContext?.enemyManager?.getGems()??[];for(const a of n){if(!a.active)continue;const r=a.x-this.x,o=a.y-this.y,c=Math.hypot(r,o);c>0&&c<this.magnetRadius&&(a.x-=r/c*1.5,a.y-=o/c*1.5)}this.abilityActive&&(this.abilityTicks++,this.abilityTicks>=this.abilityDuration&&(this.abilityActive=!1,this.speed=this.baseSpeed)),this.abilityCooldown>0&&this.abilityCooldown--}takeDamage(e){this.hp-=e,this.hp<0&&(this.hp=0)}applyCharacterData(e){e&&(e.defaultWeapon!==void 0&&(this.classWeaponType=e.defaultWeapon),e.stats&&(e.stats.hp!==void 0&&(this.hp=e.stats.hp),e.stats.maxHp!==void 0&&(this.maxHp=e.stats.maxHp),e.stats.speed!==void 0&&(this.speed=e.stats.speed),e.stats.damage!==void 0&&(this.bulletDamage=e.stats.damage),e.stats.strength!==void 0&&(this.strength=e.stats.strength),e.stats.intelligence!==void 0&&(this.intelligence=e.stats.intelligence),e.stats.agility!==void 0&&(this.agility=e.stats.agility),e.stats.luck!==void 0&&(this.luck=e.stats.luck),e.stats.defense!==void 0&&(this.defense=e.stats.defense)),e.shape!==void 0&&(this.shape=e.shape),e.color!==void 0&&(this.color=e.color),e.defaultWeapon!==void 0&&(this.activeWeapons.has(e.defaultWeapon)||this.addWeapon(e.defaultWeapon)))}draw(e){let t=this.characterData?.sprite||this.characterData?.id||"cyber_runner";const s=this.gameContext?.assetLoader?.getImage(`/assets/player/${t}.png`);s&&s.complete&&s.naturalWidth>0&&(e.save(),e.translate(this.x,this.y),e.rotate(this.rotation),this.isFlipped?(e.scale(-1,1),e.drawImage(s,-this.size/2,-this.size/2,this.size,this.size)):e.drawImage(s,-this.size/2,-this.size/2,this.size,this.size),e.restore())}}class ne{constructor(e,t,s,i,n=1){this.enemies=[],this.enemyPool=[],this.particleManager=null,this.gems=[],this.gemPool=[],this.chests=[],this.chestPool=[],this.assetLoader=null,this.poisonPuddles=[],this.player=e,this.bulletSpatialGrid=t,this.particleManager=s||null,this.assetLoader=i||null,this.preallocateEnemies(n),this.preallocateGems(),this.preallocateChests(),this.waves=[{startTime:0,enemyType:"small",count:10,spawnInterval:60,spawned:0,lastSpawnTime:0,spawnPattern:"normal"},{startTime:30,enemyType:"small",count:15,spawnInterval:45,spawned:0,lastSpawnTime:0,spawnPattern:"normal"},{startTime:60,enemyType:"medium",count:7,spawnInterval:90,spawned:0,lastSpawnTime:0,spawnPattern:"ring"},{startTime:90,enemyType:"small",count:25,spawnInterval:30,spawned:0,lastSpawnTime:0,spawnPattern:"normal"},{startTime:120,enemyType:"medium",count:12,spawnInterval:75,spawned:0,lastSpawnTime:0,spawnPattern:"cone"},{startTime:150,enemyType:"large",count:5,spawnInterval:120,spawned:0,lastSpawnTime:0,spawnPattern:"normal"},{startTime:180,enemyType:"small",count:50,spawnInterval:20,spawned:0,lastSpawnTime:0,spawnPattern:"surge"},{startTime:210,enemyType:"medium",count:20,spawnInterval:60,spawned:0,lastSpawnTime:0,spawnPattern:"normal"},{startTime:240,enemyType:"large",count:10,spawnInterval:90,spawned:0,lastSpawnTime:0,spawnPattern:"ring"}],window.addEventListener("spawnChest",a=>{const r=a;this.spawnChest(r.detail.x,r.detail.y)})}preallocateEnemies(e){const t=Math.floor(20*e*2);for(let s=0;s<t;s++)this.enemyPool.push({x:0,y:0,hp:0,maxHp:0,radius:0,speed:0,active:!1,type:"small",damage:0,id:"",_lastHitByWeapon:void 0})}preallocateGems(){for(let e=0;e<100;e++)this.gemPool.push({x:0,y:0,vx:0,vy:0,life:0,size:0,value:0,active:!1})}preallocateChests(){for(let e=0;e<10;e++)this.chestPool.push({x:0,y:0,radius:16,active:!1})}getEnemies(){return this.enemies.filter(e=>e.active)}getGems(){return this.gems.filter(e=>e.active)}getChests(){return this.chests.filter(e=>e.active)}takeDamage(e,t,s=!1,i=!1,n,a,r,o){if(!(!i&&(!e.active||e.hp<=0))){if(e.hp-=t,e._damageFlash=8,n!==void 0){e._lastHitByWeapon=n;const c=F[n];if(c&&c.knockback&&a!==void 0&&r!==void 0){let d=c.knockback;o&&o>1&&(d*=1+(o-1)*.25);const p=e.x-a,f=e.y-r,u=Math.hypot(p,f)||1,g={x:p/u,y:f/u};e.knockbackVx=g.x*d,e.knockbackVy=g.y*d,e.knockbackTimer=8}}window.dispatchEvent(new CustomEvent("damageDealt",{detail:{amount:t,isCritical:s}}))}}spawnPoisonPuddle(e,t){let s=this.poisonPuddles.find(i=>!i.active);s?(s.x=e,s.y=t,s.radius=32,s.life=180,s.maxLife=180,s.active=!0):(s={x:e,y:t,radius:32,life:180,maxLife:180,active:!0},this.poisonPuddles.push(s))}updatePoisonPuddles(){for(const e of this.poisonPuddles){if(!e.active)continue;if(e.life--,e.life<=0){e.active=!1;continue}let t=!1;for(const s of this.enemies){if(!s.active||s.hp<=0)continue;const i=s.x-e.x,n=s.y-e.y;Math.hypot(i,n)<e.radius+s.radius&&(this.takeDamage(s,2.5,!1,!1,l.BIO_TOXIN),t=!0)}t&&this.particleManager&&this.particleManager.spawn(e.x,e.y,1,"#00FF00")}}draw(e,t=0,s=0){e.save();for(let i=0,n=this.enemies.length;i<n;i++){const a=this.enemies[i];if(!a.active)continue;e.beginPath(),e.arc(a.x,a.y,a.radius,0,Math.PI*2),e.fillStyle=a.hp>0?"#f00":"#222",e.fill(),e.lineWidth=2,e.strokeStyle="#fff",e.stroke(),e.closePath();const r=a.radius*2,o=4,c=a.x-a.radius,d=a.y-a.radius-10;e.fillStyle="#333",e.fillRect(c,d,r,o);const p=a.hp/a.maxHp*r;e.fillStyle="#0F0",e.fillRect(c,d,p,o),e.strokeStyle="#000",e.lineWidth=1,e.strokeRect(c,d,r,o)}for(let i=0,n=this.gems.length;i<n;i++){const a=this.gems[i];a.active&&(e.beginPath(),e.arc(a.x,a.y,a.size,0,Math.PI*2),e.fillStyle="#ff0",e.fill(),e.lineWidth=1,e.strokeStyle="#888",e.stroke(),e.closePath())}for(let i=0,n=this.chests.length;i<n;i++){const a=this.chests[i];a.active&&(e.beginPath(),e.arc(a.x,a.y,a.radius,0,Math.PI*2),e.fillStyle="#00f",e.fill(),e.lineWidth=2,e.strokeStyle="#fff",e.stroke(),e.closePath())}for(let i=0;i<this.poisonPuddles.length;i++){const n=this.poisonPuddles[i];if(!n.active)continue;e.save();const a=n.life/n.maxLife;e.globalAlpha=a*.6,e.beginPath(),e.arc(n.x,n.y,n.radius,0,Math.PI*2),e.fillStyle="#00FF00",e.shadowColor="#00FF00",e.shadowBlur=15,e.fill(),e.restore()}e.restore()}update(e,t=0,s=[]){for(let a=0;a<this.waves.length;a++){const r=this.waves[a];t>=r.startTime&&r.spawned<r.count&&t*1e3-r.lastSpawnTime>r.spawnInterval&&(this.spawnEnemy(r.enemyType,t,r.spawnPattern),r.spawned++,r.lastSpawnTime=t*1e3)}const i=this.player.x,n=this.player.y;for(let a=0,r=this.enemies.length;a<r;a++){const o=this.enemies[a];if(!o.active)continue;const c=i-o.x,d=n-o.y,p=Math.hypot(c,d);o.knockbackTimer&&o.knockbackTimer>0?(o.x+=o.knockbackVx??0,o.y+=o.knockbackVy??0,o.knockbackVx=(o.knockbackVx??0)*.7,o.knockbackVy=(o.knockbackVy??0)*.7,o.knockbackTimer--):(o.knockbackVx=0,o.knockbackVy=0,o.knockbackTimer=0,p>o.radius&&(o.x+=c/p*o.speed,o.y+=d/p*o.speed)),p<o.radius+this.player.radius&&this.player.takeDamage(o.damage);const f=this.bulletSpatialGrid.query(o.x,o.y,o.radius);for(let u=0;u<f.length;u++){const g=f[u];if(!g.active)continue;const M=g.x-o.x,y=g.y-o.y;if(Math.hypot(M,y)<o.radius+g.radius){const S=g.level??1,_=Math.random()<.15,L=_?2:1,G=g.damage*L;this.takeDamage(o,G,_,!1,g.weaponType,this.player.x,this.player.y,S),g.active=!1,this.particleManager&&this.particleManager.spawn(o.x,o.y,1,"#f00")}}o.hp<=0&&o.active&&(o.active=!1,this.spawnGem(o.x,o.y,1),o._lastHitByWeapon===l.MECH_MORTAR&&window.dispatchEvent(new CustomEvent("enemyDeathExplosion",{detail:{x:o.x,y:o.y,damage:o.damage*2,radius:150,color:"#FF4500"}})),this.enemyPool.push(o))}for(let a=0,r=this.gems.length;a<r;a++){const o=this.gems[a];if(!o.active)continue;const c=this.player.x-o.x,d=this.player.y-o.y,p=Math.hypot(c,d),f=.7;o.vx=c/(p||1)*f,o.vy=d/(p||1)*f,o.x+=o.vx*(e/1e3),o.y+=o.vy*(e/1e3),o.life--,o.life<=-300&&(o.active=!1,this.gemPool.push(o)),p<18&&(this.player.gainExp(o.value),o.active=!1,this.particleManager&&this.particleManager.spawn(o.x,o.y,1,"#0ff"),this.gemPool.push(o))}this.gems=this.gems.filter(a=>a.active),this.updateChests(e),this.updatePoisonPuddles()}spawnEnemy(e,t,s="normal"){let i=this.enemyPool.pop();switch(i||(i={x:0,y:0,hp:0,maxHp:0,radius:0,speed:0,active:!1,type:"small",damage:0,id:"",_lastHitByWeapon:void 0}),i.active=!0,i.type=e,i.id=`enemy-${Date.now()}-${Math.random().toFixed(4)}`,i._damageFlash=0,e){case"small":i.hp=100,i.maxHp=100,i.radius=12,i.speed=1.5*.4,i.damage=10;break;case"medium":i.hp=300,i.maxHp=300,i.radius=18,i.speed=1*.4,i.damage=20;break;case"large":i.hp=800,i.maxHp=800,i.radius=24,i.speed=.7*.4,i.damage=40;break}const n=800;let a=this.player.x,r=this.player.y;switch(s){case"normal":{const o=Math.random()*Math.PI*2;a+=Math.cos(o)*n,r+=Math.sin(o)*n;break}case"ring":{const o=Math.random()*Math.PI*2,c=n+Math.random()*100;a+=Math.cos(o)*c,r+=Math.sin(o)*c;break}case"cone":{const o=Math.random()*Math.PI*.6-Math.PI*.3,c=-Math.PI/2+o,d=n+Math.random()*200;a+=Math.cos(c)*d,r+=Math.sin(c)*d;break}case"surge":{const o=Math.random()*Math.PI*2;a+=Math.cos(o)*n,r+=Math.sin(o)*n;break}}i.x=a,i.y=r,this.enemies.push(i)}spawnGem(e,t,s=1){let i=this.gemPool.pop();i||(i={x:0,y:0,vx:0,vy:0,life:0,size:0,value:0,active:!1}),i.x=e,i.y=t,i.vx=(Math.random()-.5)*2,i.vy=(Math.random()-.5)*2,i.life=1200,i.size=6,i.value=s,i.active=!0,this.gems.push(i)}spawnChest(e,t){let s=this.chestPool.pop();s||(s={x:0,y:0,radius:16,active:!1}),s.x=e,s.y=t,s.active=!0,this.chests.push(s),m.info(`Chest spawned at ${e}, ${t}`)}updateChests(e){for(let t=0;t<this.chests.length;t++){const s=this.chests[t];if(!s.active)continue;const i=this.player.x-s.x,n=this.player.y-s.y,a=Math.hypot(i,n);a>0&&a<this.player.magnetRadius*2&&(s.x+=i/a*1.5*(e/1e3),s.y+=n/a*1.5*(e/1e3)),a<s.radius+this.player.radius&&(s.active=!1,this.chestPool.push(s),m.info("Chest picked up!"),window.dispatchEvent(new CustomEvent("chestPickedUp")))}this.chests=this.chests.filter(t=>t.active)}}class me{constructor(e,t,s,i,n,a,r,o){this.x=e,this.y=t,this.radius=s,this.damage=i,this.life=n,this.maxLife=n,this.active=!0,this.color=a,this.enemyManager=r,this.player=o,this._applyDamage()}update(){if(this.active&&(this.life--,this.life<=0)){this.active=!1;return}}draw(e){if(!this.active)return;e.save();const t=Math.max(0,this.life/this.maxLife);e.globalAlpha=t*.6,e.beginPath(),e.arc(this.x,this.y,this.radius,0,Math.PI*2),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=20,e.fill(),e.restore()}_applyDamage(){if(this.enemyManager&&this.enemyManager.enemies)for(const e of this.enemyManager.enemies){const t=e.x-this.x,s=e.y-this.y;if(Math.hypot(t,s)<=this.radius){if(e.id===this.player.id)continue;this.enemyManager.takeDamage(e,this.damage,!1,!0)}}}}class oe{constructor(e,t,s,i){this.aoeZones=[],this.particleManager=e,this.enemyManager=t,this.onShake=i,this.player=s}triggerExplosion(e,t,s,i,n=100,a="#FFA07A"){if(this.aoeZones.push(new me(e,t,n,s,60,a,this.enemyManager,this.player)),i&&typeof i.takeDamage=="function"&&i.takeDamage(s),this.enemyManager&&typeof this.enemyManager.getEnemies=="function")for(const o of this.enemyManager.getEnemies()){const c=o.x-e,d=o.y-t;Math.hypot(c,d)<=n&&this.enemyManager.takeDamage(o,s*1)}this.onShake&&this.onShake(150,5)}update(){for(let e=0;e<this.aoeZones.length;e++){const t=this.aoeZones[e];t.active&&t.update()}this.aoeZones=this.aoeZones.filter(e=>e.active)}draw(e){for(let t=0;t<this.aoeZones.length;t++){const s=this.aoeZones[t];s.active&&s.draw(e)}}}class re{constructor(e,t){this.loader=null,this.currentDPS=0,this.showMinimap=!1,this.player=e,this.loader=t||null}draw(e,t,s,i,n,a){const r=e.canvas.width,o=e.canvas.height;e.save(),e.font="18px Orbitron, sans-serif",e.fillStyle="#fff";const c=Math.floor(t/60).toString().padStart(2,"0"),d=Math.floor(t%60).toString().padStart(2,"0");e.font="bold 32px Orbitron, sans-serif",e.textAlign="center",e.fillText(`${c}:${d}`,r/2,50),e.textAlign="left",e.font="bold 20px Orbitron, sans-serif",e.fillText(`Level: ${this.player.level}`,20,40),e.fillText(`Strength: ${this.player.strength}`,20,65),e.save(),e.font="bold 20px Orbitron, sans-serif",e.fillStyle="#0ff",e.textAlign="left",e.fillText("STATS",20,80),e.font="18px Orbitron, sans-serif",e.fillStyle="#fff";const p=110,f=[["HP",`${this.player.hp} / ${this.player.maxHp}`],["Speed",`${this.player.speed.toFixed(2)}`],["Damage",`${this.player.bulletDamage??0}`],["Strength",`${this.player.strength??0}`],["Defense",`${this.player.defense??0}`],["Attack Speed",`${(this.player.attackSpeed??1).toFixed(2)}`],["Magnet",`${this.player.magnetRadius??0}`],["Regen",`${this.player.regen??0}`],["Luck",`${this.player.luck??0}`],["Intelligence",`${this.player.intelligence??0}`],["Agility",`${this.player.agility??0}`],["DPS",`${this.currentDPS.toFixed(2)}`]];for(let w=0;w<f.length;w++)e.fillText(`${f[w][0]}: ${f[w][1]}`,20,p+w*24);e.restore();const u=o-60;this.drawBar(e,20,u,320,20,Math.max(0,Math.min(1,this.player.hp/this.player.maxHp)),"#ff0000","#550000"),e.fillStyle="#fff",e.font="bold 18px Orbitron, sans-serif",e.fillText(`HP: ${this.player.hp} / ${this.player.maxHp}`,30,u+15);const M=o-30,y=this.player.getNextExp();this.drawBar(e,20,M,r-40,15,this.player.exp/y,"#00ffff","#005555"),e.fillStyle="#fff",e.fillText(`XP: ${this.player.exp} / ${y}`,30,M+12),this.showMinimap&&this.drawMinimap(e,this.player.x,this.player.y,s,i,n),this.drawUpgradeHistory(e,a),e.restore()}drawBar(e,t,s,i,n,a,r,o){e.fillStyle=o,e.fillRect(t,s,i,n),e.fillStyle=r,e.fillRect(t,s,i*a,n),e.strokeStyle="#fff",e.strokeRect(t,s,i,n)}drawMinimap(e,t,s,i,n,a){const o=e.canvas.width-150-20,c=20;e.save(),e.globalAlpha=.7,e.fillStyle="#000",e.fillRect(o,c,150,150),e.strokeStyle="#0ff",e.lineWidth=2,e.strokeRect(o,c,150,150);const d=150/n,p=150/a;e.fillStyle="#00FFFF",e.beginPath(),e.arc(o+t*d,c+s*p,3,0,Math.PI*2),e.fill(),e.fillStyle="#FF0000";for(const f of i)f.active&&(e.beginPath(),e.arc(o+f.x*d,c+f.y*p,1.5,0,Math.PI*2),e.fill());e.restore()}drawUpgradeHistory(e,t){e.save(),e.globalAlpha=.7,e.fillStyle="#111",e.fillRect(20,400,240,300),e.strokeStyle="#0ff",e.lineWidth=2,e.strokeRect(20,400,240,300),e.fillStyle="#0ff",e.font="bold 18px Orbitron, sans-serif",e.textAlign="left",e.fillText("Upgrade History",30,425),e.font="14px Orbitron, sans-serif",e.fillStyle="#fff";const r=30;let o=450;const c=18,d={};for(const f of t){let u=f;u.startsWith("Weapon Upgrade:")&&(u=u.replace("Weapon Upgrade:","Wep:")),u.startsWith("Passive Unlock:")&&(u=u.replace("Passive Unlock:","Pas:"));const g=u.match(/Wep: (.+) Lv\.(\d+)/);if(g){const M=g[1].trim(),y=parseInt(g[2],10);(!d[M]||parseInt(d[M].match(/Lv\.(\d+)/)?.[1]||"0",10)<y)&&(d[M]=u)}else d[u]=u}const p=Object.values(d);for(let f=0;f<p.length;f++)e.fillText(p[f],r,o+f*c);e.restore()}drawAliveEnemiesCount(e,t){if(!e)return;e.save(),e.globalAlpha=.85,e.fillStyle="#ffffff",e.font="12px monospace";const s=Math.max(10,e.canvas.width-140);e.fillText(`Enemies: ${t}`,s,20),e.restore()}}class ce{constructor(e,t){this.visible=!1,this.options=[],this.panelElement=null,this.player=e,this.game=t,this.createDomElements(),this.addEventListeners()}createDomElements(){this.panelElement=document.getElementById("upgrade-panel"),this.panelElement||(this.panelElement=document.createElement("div"),this.panelElement.id="upgrade-panel",this.panelElement.className="upgrade-panel-container hidden",document.body.appendChild(this.panelElement)),this.panelElement.innerHTML=`
      <h2 class="neon-text-cyan">Choose Upgrade</h2>
      <div class="upgrade-options-container"></div>
    `}addEventListeners(){window.addEventListener("keydown",e=>{if(!this.visible)return;const t=parseInt(e.key);!isNaN(t)&&t>=1&&t<=this.options.length?this.applyUpgrade(t-1):e.key==="Escape"&&(this.hide(),this.game&&typeof this.game.setState=="function"&&this.game.setState("GAME"))})}show(){this.visible=!0,this.options=this.generateOptions(),this.renderOptions(),this.panelElement&&(this.panelElement.classList.remove("hidden"),this.panelElement.style.display="block",this.panelElement.style.zIndex="9999",this.panelElement.style.pointerEvents="auto")}hide(){this.visible=!1,this.panelElement&&(this.panelElement.classList.add("hidden"),this.panelElement.style.display="none",this.panelElement.style.pointerEvents="none")}renderOptions(){if(!this.panelElement)return;const e=this.panelElement.querySelector(".upgrade-options-container");e&&(e.innerHTML="",this.options.forEach((t,s)=>{const i=document.createElement("div");i.className="upgrade-option neon-border",i.innerHTML=`
        <div class="upgrade-icon">${t.icon?`<img src="${t.icon}" alt="${t.name}" style="width:48px;height:48px;object-fit:contain;" />`:""}</div>
        <div class="upgrade-info">
          <div class="upgrade-title">${t.name}</div>
          <div class="upgrade-desc">${t.description}</div>
          <div class="upgrade-meta">
            <span class="upgrade-type">${t.type==="weapon"?"Weapon":t.type==="passive"?"Passive":"Skip"}</span>
            ${t.currentLevel!==void 0&&t.type!=="skip"?`<span class="upgrade-level">Lv.${t.currentLevel+1}</span>`:""}
          </div>
        </div>
        <div class="upgrade-key">[${s+1}]</div>
      `,i.onclick=()=>this.applyUpgrade(s),e.appendChild(i)}))}applyUpgrade(e){const t=this.options[e];if(t){if(t.type==="weapon"){const s=t.id;this.player.activeWeapons.get(s),this.player.addWeapon(s),this.player.activeWeapons.get(s)}else if(t.type==="passive"){const s=D.find(i=>i.id===t.id);s&&this.player.addPassive(s.name)}typeof window<"u"&&window.dispatchEvent(new CustomEvent("playerUpgraded")),this.hide(),this.game&&typeof this.game.setState=="function"&&this.game.setState("GAME")}}shuffle(e){for(let t=e.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}return e}generateOptions(){const e=[],t=Array.from(this.player.activeWeapons.keys()),s=this.player.activePassives.map(y=>y.type),i=5,n=this.player.characterData?.defaultWeapon,a=Object.keys(F).map(y=>Number(y)).filter(y=>{const w=F[y];return w?!w.isClassWeapon||y===n:!1}),r=[];for(const y of a){const w=F[y];if(!w)continue;const S=this.player.activeWeapons.get(y)||0;!S&&w.maxLevel>0&&this.player.activeWeapons.size<i?r.push({type:"weapon",id:y,name:`Unlock ${w.name}`,description:w.description||"",icon:w.icon??"",currentLevel:0}):S>0&&S<w.maxLevel&&r.push({type:"weapon",id:y,name:`Upgrade ${w.name} Lv.${S+1}`,description:w.description||"",icon:w.icon??"",currentLevel:S})}this.shuffle(r);const o=[];for(const y of D){const w=this.player.activePassives.find(S=>S.type===y.name);s.includes(y.name)?w&&w.level<y.maxLevel&&o.push({type:"passive",id:y.id,name:`Upgrade ${y.name} Lv.${w.level+1}`,description:y.description||"",icon:y.icon??"",currentLevel:w.level}):o.push({type:"passive",id:y.id,name:`Unlock ${y.name}`,description:y.description||"",icon:y.icon??"",currentLevel:0})}this.shuffle(o);let c;!(t.length===i&&r.length===0)&&r.length>0?c=r.shift():o.length>0?c=o.shift():c={type:"skip",id:-1,name:"Skip",description:"No upgrades available.",icon:""},c?e.push(c):e.push({type:"skip",id:-1,name:"Skip",description:"No upgrades available.",icon:""});let f;o.length===0?r.length>0?f=r.shift():f={type:"skip",id:-2,name:"Skip",description:"No upgrades available.",icon:""}:f=o.shift(),f?e.push(f):e.push({type:"skip",id:-2,name:"Skip",description:"No upgrades available.",icon:""});const g=[...r,...o].filter(y=>!e.some(w=>w&&w.id===y.id&&w.type===y.type));let M;return g.length>0?M=g[Math.floor(Math.random()*g.length)]:M={type:"skip",id:-3,name:"Skip",description:"No upgrades available.",icon:""},M?e.push(M):e.push({type:"skip",id:-3,name:"Skip",description:"No upgrades available.",icon:""}),e.slice(0,3)}}const ge=Object.freeze(Object.defineProperty({__proto__:null,UpgradePanel:ce},Symbol.toStringTag,{value:"Module"}));class ye{constructor(){this.progress=0,this.active=!1,this.onComplete=null,this.duration=900}drawSkipButton(e,t){const a=t.height-44-32;e.save(),e.globalAlpha=.85,e.fillStyle="#222",e.strokeStyle="#0ff",e.lineWidth=3,e.beginPath(),e.roundRect(32,a,120,44,12),e.fill(),e.stroke(),e.font="bold 22px Orbitron, sans-serif",e.fillStyle="#0ff",e.textAlign="center",e.textBaseline="middle",e.shadowColor="#00f6ff",e.shadowBlur=12,e.fillText("Skip",32+120/2,a+44/2),e.restore()}isFinished(){return!this.active}update(){this.active&&(this.progress++,this.progress>this.duration&&(this.active=!1,this.onComplete&&this.onComplete()))}start(e){this.progress=0,this.active=!0,this.onComplete=e}draw(e,t){if(!this.active)return;e.save();let s=1;this.progress<60?s=this.progress/60:this.progress>this.duration-60&&(s=1-(this.progress-(this.duration-60))/60),e.globalAlpha=s,e.fillStyle="#000",e.fillRect(0,0,t.width,t.height),e.globalAlpha=1,e.textAlign="center",this.progress<180?(e.font="bold 54px Orbitron, sans-serif",e.fillStyle="#0ff",e.shadowColor="#00f6ff",e.shadowBlur=24,e.fillText("CYBER SURVIVOR",t.width/2,t.height/2-40),e.font="28px Orbitron, sans-serif",e.fillStyle="#fff",e.shadowBlur=0,e.fillText("A Neon Roguelike Experience",t.width/2,t.height/2+30)):this.progress<420?(e.font="bold 42px Orbitron, sans-serif",e.fillStyle="#ff00cc",e.shadowColor="#ff00cc",e.shadowBlur=18,e.fillText("In the year 2088...",t.width/2,t.height/2-20),e.font="24px Orbitron, sans-serif",e.fillStyle="#fff",e.shadowBlur=0,e.fillText("Mega-cities are ruled by rogue AIs.",t.width/2,t.height/2+30)):this.progress<660?(e.font="bold 42px Orbitron, sans-serif",e.fillStyle="#00ffea",e.shadowColor="#00ffea",e.shadowBlur=18,e.fillText("You are the last survivor...",t.width/2,t.height/2-20),e.font="24px Orbitron, sans-serif",e.fillStyle="#fff",e.shadowBlur=0,e.fillText("Fight through endless waves of enemies.",t.width/2,t.height/2+30)):(e.font="bold 48px Orbitron, sans-serif",e.fillStyle="#0ff",e.shadowColor="#00f6ff",e.shadowBlur=24,e.fillText("Survive the Neon Onslaught!",t.width/2,t.height/2),e.font="24px Orbitron, sans-serif",e.fillStyle="#fff",e.shadowBlur=0,e.fillText("Good luck...",t.width/2,t.height/2+60)),this.drawSkipButton(e,t),e.restore()}handleClick(e,t,s){if(!this.active)return!1;const i=120,n=44,a=32,r=s.height-n-32;return e>=a&&e<=a+i&&t>=r&&t<=r+n?(this.active=!1,this.onComplete&&this.onComplete(),!0):!1}}class le{constructor(e,t,s=1){this.boss=null,this.spawnTimer=0,this.particleManager=null,this.difficulty=1,this.lastBossSpawnTime=0,this.player=e,this.particleManager=t||null,this.difficulty=s,this.lastBossSpawnTime=0}update(e,t){if(!this.boss)t-this.lastBossSpawnTime>=60&&(this.spawnBoss(),this.lastBossSpawnTime=t);else if(this.boss.state==="TELEGRAPH")this.boss.telegraph--,this.particleManager&&this.particleManager.spawn(this.boss.x,this.boss.y,1,"#f55"),this.boss.telegraph<=0&&(this.boss.state="ACTIVE",this.boss.attackTimer=60);else if(this.boss&&this.boss.state==="ACTIVE"){const s=this.player.x-this.boss.x,i=this.player.y-this.boss.y,n=Math.hypot(s,i);this.boss.specialCharge==null&&(this.boss.specialCharge=0),this.boss.specialReady==null&&(this.boss.specialReady=!1),this.boss.specialReady?(this.boss.specialCharge++,this.boss.specialCharge<180?this.particleManager&&this.boss.specialCharge%5===0&&this.particleManager.spawn(this.boss.x,this.boss.y,2,"#FF00FF"):(n<this.boss.radius+120&&(this.player.hp-=80,this.particleManager&&this.particleManager.spawn(this.player.x,this.player.y,2,"#FF0000"),window.dispatchEvent(new CustomEvent("screenShake",{detail:{durationMs:300,intensity:10}}))),this.boss.specialReady=!1,this.boss.specialCharge=0)):(n>0&&(this.boss.x+=s/n*.7,this.boss.y+=i/n*.7),this.boss.specialCharge++,this.boss.specialCharge>360&&(this.boss.specialReady=!0,this.boss.specialCharge=0)),this.boss.attackTimer--,this.boss.attackTimer<=0&&(this.launchAttackWave(),this.boss.attackTimer=Math.max(30,60-(this.difficulty-1)*10)),n<this.player.radius+this.boss.radius&&(this.player.hp-=20,this.boss.hp-=30,this.boss._damageFlash=12,this.player.x-=s/n*32,this.player.y-=i/n*32,this.boss.x+=s/n*16,this.boss.y+=i/n*16,this.particleManager&&(this.particleManager.spawn(this.player.x,this.player.y,1,"#f00"),this.particleManager.spawn(this.boss.x,this.boss.y,1,"#FFD700"))),this.boss._damageFlash&&this.boss._damageFlash>0&&this.boss._damageFlash--,this.boss.hp<=0&&(this.boss.state="DEAD",this.spawnChest(this.boss.x,this.boss.y),window.dispatchEvent(new CustomEvent("screenShake",{detail:{durationMs:500,intensity:15}})))}}spawnBoss(){const e=this.player.x,t=this.player.y,s=Math.random()*Math.PI*2,i=220+Math.random()*80,n=e+Math.cos(s)*i,a=t+Math.sin(s)*i;window&&window.dispatchEvent&&(window.dispatchEvent(new CustomEvent("bossSpawn",{detail:{x:n,y:a,cinematic:!0}})),window.dispatchEvent(new CustomEvent("screenShake",{detail:{durationMs:200,intensity:8}})));const r=3e3+(this.difficulty-1)*1e3;this.boss={x:n,y:a,hp:r,maxHp:r,radius:160,active:!0,telegraph:180,state:"TELEGRAPH",attackTimer:0,_damageFlash:0},window&&window.dispatchEvent&&window.dispatchEvent(new CustomEvent("bossFightStart",{detail:{boss:this.boss}}))}spawnChest(e,t){window.dispatchEvent(new CustomEvent("spawnChest",{detail:{x:e,y:t}}))}launchAttackWave(){if(!this.boss)return;this.particleManager&&this.particleManager.spawn(this.boss.x,this.boss.y,1,"#f90"),Math.random()<.33&&window&&window.dispatchEvent&&window.dispatchEvent(new CustomEvent("bossMinionSpawn",{detail:{x:this.boss.x,y:this.boss.y,count:3+this.difficulty}}));const e=new CustomEvent("bossAttack",{detail:{x:this.boss.x,y:this.boss.y,intensity:this.difficulty}});window.dispatchEvent(e),this.particleManager&&this.particleManager.spawn(this.boss.x,this.boss.y,1,"#fff")}draw(e){if(this.boss){if(this.boss.state==="TELEGRAPH")e.save(),e.globalAlpha=.8,e.fillStyle="rgba(0,0,0,0.7)",e.fillRect(0,0,e.canvas.width,e.canvas.height),e.font="bold 64px Orbitron, Arial",e.fillStyle="#FFD700",e.textAlign="center",e.shadowColor="#FF00FF",e.shadowBlur=32,e.fillText("BOSS APPROACHING",e.canvas.width/2,e.canvas.height/2-80),e.font="bold 32px Orbitron, Arial",e.fillStyle="#FF00FF",e.fillText("Prepare for Impact",e.canvas.width/2,e.canvas.height/2-20),e.restore(),e.save(),e.strokeStyle="rgba(255,0,0,0.8)",e.lineWidth=24,e.shadowColor="#FFD700",e.shadowBlur=64,e.beginPath(),e.arc(this.boss.x,this.boss.y,this.boss.radius+48,0,Math.PI*2),e.stroke(),e.restore();else if(this.boss.state==="ACTIVE"){e.save(),e.globalAlpha=.98,e.shadowColor="#FFD700",e.shadowBlur=24,e.fillStyle="#222",e.fillRect(this.boss.x-120,this.boss.y-this.boss.radius-38,240,22),e.fillStyle="#f00";const t=Math.max(0,this.boss.hp)/(3e3+(this.difficulty-1)*1e3);e.fillRect(this.boss.x-120,this.boss.y-this.boss.radius-38,240*t,22),e.font="bold 18px Orbitron, Arial",e.fillStyle="#FFD700",e.textAlign="center",e.fillText("BOSS HP",this.boss.x,this.boss.y-this.boss.radius-44),e.restore(),e.save(),this.boss._damageFlash&&this.boss._damageFlash>0&&(e.globalAlpha=.7+.3*Math.sin(this.boss._damageFlash*2),e.translate((Math.random()-.5)*8,(Math.random()-.5)*8),e.shadowColor="#FFD700",e.shadowBlur=48),e.beginPath(),e.arc(this.boss.x,this.boss.y,this.boss.radius,0,Math.PI*2),e.fillStyle="#FFD700",e.fill(),e.restore(),e.save(),e.beginPath(),e.arc(this.boss.x-48,this.boss.y-32,24,0,Math.PI*2),e.arc(this.boss.x+48,this.boss.y-32,24,0,Math.PI*2),e.fillStyle="#fff",e.shadowColor="#FF00FF",e.shadowBlur=32,e.globalAlpha=.9+.1*Math.sin(Date.now()/200),e.fill(),e.restore()}}}getActiveBoss(){return this.boss&&this.boss.state==="ACTIVE"?this.boss:null}setDifficulty(e){this.difficulty=e,this.spawnTimer=Math.max(600,1800-(e-1)*300)}}class we{constructor(e,t,s,i){this.bullets=[],this.bulletPool=[],this.initialPoolSize=200,this.assetLoader=e,this.enemySpatialGrid=t,this.particleManager=s,this.enemyManager=i,this.preallocateBullets()}lineCircleIntersect(e,t,s,i,n,a,r){const o=s-e,c=i-t,d=e-n,p=t-a,f=o*o+c*c,u=2*(d*o+p*c),g=d*d+p*p-r*r,M=u*u-4*f*g;if(M<0)return null;const y=(-u-Math.sqrt(M))/(2*f),w=(-u+Math.sqrt(M))/(2*f);let S=1/0;return y>=0&&y<=1&&(S=Math.min(S,y)),w>=0&&w<=1&&(S=Math.min(S,w)),S===1/0?null:{x:e+S*o,y:t+S*c}}preallocateBullets(){for(let e=0;e<this.initialPoolSize;e++)this.bulletPool.push({x:0,y:0,vx:0,vy:0,radius:0,life:0,active:!1,damage:0,weaponType:l.PISTOL})}reset(){this.bullets=[],this.bulletPool=[],this.preallocateBullets()}update(){const e=[];for(let t=0;t<this.bullets.length;t++){const s=this.bullets[t];if(!s.active){this.bulletPool.push(s);continue}const i=s.x,n=s.y;s.x+=s.vx,s.y+=s.vy,s.life--;let a=null,r=null;const o=this.enemySpatialGrid.query(s.x,s.y,s.radius);for(const c of o)if(!(!c.active||c.hp<=0)){if(s.weaponType===l.MECH_MORTAR)r=this.lineCircleIntersect(i,n,s.x,s.y,c.x,c.y,s.radius+c.radius);else{const d=s.x-c.x,p=s.y-c.y;Math.hypot(d,p)<s.radius+c.radius&&(r={x:s.x,y:s.y})}if(r){a=c,c.x-s.x,c.y-s.y;const d=s.level??1;this.enemyManager.takeDamage(c,s.damage,!1,!1,s.weaponType,window.player?.x,window.player?.y,d),s.active=!1,s.weaponType!==l.MECH_MORTAR&&this.bulletPool.push(s),this.particleManager.spawn(c.x,c.y,1,"#f00");break}}if(s.weaponType===l.MECH_MORTAR&&(a||s.life<=0)){s.active=!1,s.vx=0,s.vy=0,s._exploded=!0,s._explosionStartTime=performance.now(),s._maxExplosionDuration=1e3,s.life=0;const c=r?r.x:s.x,d=r?r.y:s.y;window.dispatchEvent(new CustomEvent("mortarExplosion",{detail:{x:c,y:d,damage:s.damage,hitEnemy:a,radius:s.explosionRadius??100}})),this.bulletPool.push(s);continue}if(s.life<=0&&s.weaponType===l.BIO_TOXIN){this.enemyManager.spawnPoisonPuddle(s.x,s.y),s.active=!1,this.bulletPool.push(s);continue}s.active&&e.push(s)}this.bullets=e}draw(e){for(const t of this.bullets){if(!t.active)continue;e.save();let s=t.projectileVisual??{type:"bullet",color:"#0ff",size:t.radius,glowColor:"#0ff",glowRadius:8};if(s?.type==="bullet"){if(e.save(),s.sprite){const i=this.assetLoader.getImage(s.sprite);if(i){const n=(s.size??t.radius)*2,a=t.x,r=t.y,o=Math.atan2(t.vy,t.vx);e.save(),e.translate(a,r),e.rotate(o),e.drawImage(i,-n/2,-n/2,n,n),e.restore()}}else e.shadowColor=s.glowColor??s.color??"#FFD700",e.shadowBlur=s.glowRadius??10,e.beginPath(),e.arc(t.x,t.y,s.size??t.radius,0,Math.PI*2),e.fillStyle=s.color??"#FFD700",e.fill();e.restore()}else if(s?.type==="plasma"||s?.type==="slime")e.save(),e.shadowColor=s.glowColor??s.color??"#0ff",e.shadowBlur=s.glowRadius??8,e.beginPath(),e.arc(t.x,t.y,s.size??t.radius,0,Math.PI*2),e.fillStyle=s.color??"#0ff",e.fill(),e.restore();else{e.save();const i=this.assetLoader.getImage(t.projectileImageKey??"bullet_cyan");if(i){const n=t.x-(s.size??t.radius),a=t.y-(s.size??t.radius);e.drawImage(i,n,a,(s.size??t.radius)*2,(s.size??t.radius)*2)}else e.shadowColor=s.glowColor??s.color??"#0ff",e.shadowBlur=s.glowRadius??8,e.beginPath(),e.arc(t.x,t.y,s.size??t.radius,0,Math.PI*2),e.fillStyle=s.color??"#0ff",e.fill();e.restore()}e.restore()}}spawnBullet(e,t,s,i,n,a){const r=F[n]??F[l.PISTOL],o=s-e,c=i-t,d=Math.atan2(c,o),p=r?.speed??2,f=r?.projectile??"bullet_cyan";let u=r?.projectileVisual??{type:"bullet",color:"#0ff",size:6};n===l.PISTOL&&(u={...u,size:(u.size??6)*5});let g=this.bulletPool.pop();g||(g={x:0,y:0,vx:0,vy:0,radius:0,life:0,active:!1,damage:0,weaponType:l.PISTOL}),g.x=e,g.y=t,g.vx=Math.cos(d)*p,g.vy=Math.sin(d)*p,g.radius=u.size??6,g.life=r?.lifetime??60,g.active=!0,g.damage=r?.damage??a,g.weaponType=n,g.projectileImageKey=f,g.projectileVisual=u,g.snakeTargets=void 0,this.bullets.push(g)}}class ve{constructor(e=100){this.pool=[];for(let t=0;t<e;t++)this.pool.push(this.createDead())}createDead(){return{x:-9999,y:-9999,vx:0,vy:0,life:0,size:2,color:"#fff",active:!1}}spawn(e,t,s=8,i="#ff0"){for(let n=0;n<s;n++){const a=this.pool.find(r=>!r.active);if(a)this.activate(a,e,t,i);else{const r=this.createDead();this.pool.push(r),this.activate(r,e,t,i)}}}activate(e,t,s,i){e.x=t+(Math.random()-.5)*8,e.y=s+(Math.random()-.5)*8;const n=2+Math.random()*2,a=Math.random()*Math.PI*2;e.vx=Math.cos(a)*n,e.vy=Math.sin(a)*n,e.life=60,e.size=1+Math.random()*3,e.color=i,e.active=!0}update(){for(const e of this.pool)e.active&&(e.x+=e.vx,e.y+=e.vy,e.vx*=.98,e.vy*=.98,e.life--,e.life<=0&&(e.active=!1,e.x=-9999,e.y=-9999))}draw(e){for(const t of this.pool)t.active&&(e.save(),e.globalAlpha=Math.max(.05,t.life/60),e.fillStyle=t.color,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill(),e.restore())}}class be{constructor(){this.cache={},this.manifest=null}getImage(e){return this.cache[e]}getName(e){return(e.split("/").pop()||e).split(".")[0]}getDimsForPath(e){switch(this.getName(e)){case"player_base":return{w:64,h:64};case"enemy_small":return{w:48,h:48};case"enemy_medium":return{w:64,h:64};case"enemy_large":return{w:96,h:96};case"boss_phase1":case"boss_phase2":case"boss_phase3":return{w:256,h:256};case"bullet_cyan":return{w:16,h:16};case"boss_shot_set":return{w:24,h:24};case"particles_sheet":return{w:64,h:64};case"hp_bar_bg":return{w:128,h:16};case"hp_bar_fill":return{w:128,h:16};case"upgrade_speed":case"upgrade_hp":return{w:64,h:64};case"cyber_runner":return{w:64,h:64};case"psionic_weaver":return{w:64,h:64};case"bio_engineer":return{w:64,h:64};case"titan_mech":return{w:64,h:64};case"ghost_operative":return{w:64,h:64};case"data_sorcerer":return{w:64,h:64};case"neural_nomad":return{w:64,h:64};case"shadow_operative":return{w:64,h:64};case"tech_warrior":return{w:64,h:64};case"heavy_gunner":return{w:64,h:64};case"wasteland_scavenger":return{w:64,h:64};case"rogue_hacked":return{w:64,h:64};case"rogue_hacker":return{w:64,h:64};case"tech_warrior_anim":return{w:64,h:64};case"character_select_bg":return{w:1920,h:1080};default:return{w:64,h:64}}}createPlaceholderImage(e,t,s,i){const n=document.createElement("canvas"),a=new Image;if(s.endsWith("_anim")&&i&&i.frameW&&i.frameH&&i.frames){const r=i.frameW,o=i.frameH,c=i.frames;n.width=r*c,n.height=o;const d=n.getContext("2d");for(let p=0;p<c;p++){const f=p/c*360;d.fillStyle=`hsl(${f}, 70%, 50%)`,d.fillRect(p*r,0,r,o),d.strokeStyle="#0ff",d.lineWidth=2,d.strokeRect(p*r,0,r,o),d.fillStyle="#fff",d.font="bold 12px sans-serif",d.textAlign="center",d.textBaseline="middle",d.fillText(`${s} ${p+1}`,p*r+r/2,o/2)}}else{n.width=e,n.height=t;const r=n.getContext("2d");r.fillStyle="#333",r.fillRect(0,0,e,t),r.strokeStyle="#0ff",r.lineWidth=2,r.strokeRect(0,0,e-1,t-1),r.fillStyle="#fff",r.font="bold 12px sans-serif",r.textAlign="center",r.textBaseline="middle",r.fillText(s,e/2,t/2)}return a.src=n.toDataURL(),a}async loadManifest(e="/assets/manifest.json"){const t=await fetch(e);return this.manifest=await t.json(),this.manifest}async loadImage(e){if(this.cache[e])return this.cache[e];const t=new Image;try{return await new Promise((s,i)=>{t.onload=()=>s(!0),t.onerror=()=>i(new Error("Image load failed: "+e)),t.src=e}),this.cache[e]=t,t}catch{const{w:s,h:i}=this.getDimsForPath(e),n=this.getName(e),a=this.getAssetInfo(n),r=this.createPlaceholderImage(s,i,n,a);return this.cache[e]=r,r}}async loadAllFromManifest(e="/assets"){this.manifest||await this.loadManifest(e+"/manifest.json");const t=[],s=n=>{for(const a in n){const r=n[a];r&&r.file?t.push("/"+r.file):typeof r=="object"&&s(r)}};s(this.manifest);const i=t.map(n=>this.loadImage(n));return await Promise.all(i),this.manifest}drawFrame(e,t,s,i,n,a,r,o){const c=this.cache[t];c&&e.drawImage(c,s,i,n,a,r-n/2,o-a/2,n,a)}renderAnimatedSprite(e,t,s,i,n,a,r){const o=this.cache[t];if(!o)return;const c=a??64,d=r??64,p=Math.max(1,Math.floor(o.width/c)),f=s%p,u=Math.floor(s/p);this.drawFrame(e,t,f*c,u*d,c,d,i,n)}getAssetInfo(e){if(!this.manifest)return;const t=s=>{for(const i in s){if(i===e)return s[i];if(typeof s[i]=="object"&&s[i]!==null){const n=t(s[i]);if(n)return n}}};return t(this.manifest)}renderSpriteFrame(e,t,s,i,n,a,r,o){this.drawFrame(e,t,s,i,n,a,r,o)}getAsset(e){if(!this.manifest)return m.warn("Manifest not loaded."),"";const t=this.manifest.assets.find(s=>s.key===e);return t?t.path:""}}class Se{constructor(e=40){this.pool=[];for(let t=0;t<e;t++)this.pool.push(this.createDead())}createDead(){return{x:-9999,y:-9999,value:0,life:0,color:"#fff",active:!1,isCritical:!1}}spawn(e,t,s,i="#FFD700",n=!1){const a=this.pool.find(r=>!r.active)||this.createDead();a.x=e+(Math.random()-.5)*12,a.y=t+(Math.random()-.5)*12,a.value=s,a.life=n?40:24+Math.floor(Math.random()*8),a.color=n?"#FF00FF":i,a.active=!0,a.isCritical=n,this.pool.includes(a)||this.pool.push(a)}update(){for(const e of this.pool)e.active&&(e.y-=.7,e.life--,e.life<=0&&(e.active=!1,e.x=-9999,e.y=-9999))}draw(e,t,s){for(const i of this.pool)i.active&&(e.save(),e.globalAlpha=Math.max(.2,i.life/(i.isCritical?40:32)),e.font=i.isCritical?"bold 24px Orbitron, Arial":"bold 18px Orbitron, Arial",e.fillStyle=i.color,e.textAlign="center",i.isCritical&&(e.shadowColor=i.color,e.shadowBlur=10),e.fillText(`${i.value}`,i.x-t+e.canvas.width/2,i.y-s+e.canvas.height/2),e.restore())}}class Me{constructor(e,t){this.lastTime=0,this.accumulatedTime=0,this.fixedUpdateInterval=1e3/60,this.animationFrameId=null,this.update=e,this.render=t}start(){this.animationFrameId=requestAnimationFrame(this.loop.bind(this))}stop(){this.animationFrameId!==null&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}loop(e){this.lastTime||(this.lastTime=e);const t=e-this.lastTime;for(this.lastTime=e,this.accumulatedTime+=t;this.accumulatedTime>=this.fixedUpdateInterval;)this.update(this.fixedUpdateInterval),this.accumulatedTime-=this.fixedUpdateInterval;const s=this.accumulatedTime/this.fixedUpdateInterval;this.render(s),this.animationFrameId=requestAnimationFrame(this.loop.bind(this))}}class he{constructor(e){this.grid=new Map,this.cellSize=e}getCellKey(e,t){const s=Math.floor(e/this.cellSize),i=Math.floor(t/this.cellSize);return`${s},${i}`}insert(e){const t=this.getCellKey(e.x,e.y);this.grid.has(t)||this.grid.set(t,[]),this.grid.get(t).push(e)}query(e,t,s){const i=[],n=Math.floor((e-s)/this.cellSize),a=Math.floor((t-s)/this.cellSize),r=Math.floor((e+s)/this.cellSize),o=Math.floor((t+s)/this.cellSize);for(let c=n;c<=r;c++)for(let d=a;d<=o;d++){const p=`${c},${d}`;this.grid.has(p)&&i.push(...this.grid.get(p))}return i}clear(){this.grid.clear()}}const Y=class Y{constructor(e){this.backgroundImage=null,this.selectedCharacterData=null,this.gameTime=0,this.worldW=4e3*100,this.worldH=4e3*100,this.camX=0,this.camY=0,this.camLerp=.12,this.brightenMode=!0,this.damageTextManager=new Se,this.dpsLog=[],this.dpsFrameDamage=0,this.totalDamageDealt=0,this.dpsHistory=[],this.dpsWindow=5e3,this.shakeDuration=0,this.shakeIntensity=0,this.currentShakeTime=0,this.backgroundImage=new window.Image,this.backgroundImage.src="assets/background.png",this.canvas=e,this.ctx=e.getContext("2d"),this.state="MAIN_MENU",this.gameTime=0,this.assetLoader=new be,this.particleManager=new ve(160),this.enemySpatialGrid=new he(200),this.bulletSpatialGrid=new he(100),this.player=new ae(this.worldW/2,this.worldH/2),this.player.radius=18,this.enemyManager=new ne(this.player,this.bulletSpatialGrid,this.particleManager,this.assetLoader,1),this.bulletManager=new we(this.assetLoader,this.enemySpatialGrid,this.particleManager,this.enemyManager),this.bossManager=new le(this.player,this.particleManager),this.cinematic=new ye,this.explosionManager||(this.explosionManager=new oe(this.particleManager,this.enemyManager,this.player,(t,s)=>this.startScreenShake(t,s))),this.hud=new re(this.player,this.assetLoader),this.player.setEnemyProvider(()=>this.enemyManager.getEnemies()),this.player.setGameContext(this),this.initInput(),this.gameLoop=new Me(this.update.bind(this),this.render.bind(this)),this.camX=this.player.x-this.canvas.width/2,this.camY=this.player.y-this.canvas.height/2,this.state="MAIN_MENU",window.addEventListener("upgradeOpen",()=>{this.state==="GAME"&&(this.state="UPGRADE_MENU")}),window.addEventListener("upgradeClose",()=>{this.state==="UPGRADE_MENU"&&(this.state="GAME")}),window.addEventListener("damageDealt",t=>this.handleDamageDealt(t)),window.addEventListener("screenShake",t=>{this.startScreenShake(t.detail.durationMs,t.detail.intensity)}),window.addEventListener("mortarExplosion",t=>this.handleMortarExplosion(t)),window.addEventListener("enemyDeathExplosion",t=>this.handleEnemyDeathExplosion(t)),window.addEventListener("levelup",()=>{if(!this.upgradePanel){m.error("[Game] UpgradePanel instance missing on levelup!");return}typeof this.upgradePanel.show=="function"&&this.upgradePanel.panelElement?(this.upgradePanel.show(),this.setState("UPGRADE_MENU")):m.error("[Game] UpgradePanel panelElement missing or show() not a function.")}),window.addEventListener("forceUpgradeOption",t=>{if(!this.upgradePanel){m.error("[Game] UpgradePanel instance missing on forceUpgradeOption!");return}typeof this.upgradePanel.show=="function"&&this.upgradePanel.panelElement?(this.upgradePanel.show(),this.setState("UPGRADE_MENU")):m.error("[Game] UpgradePanel panelElement missing or show() not a function.")})}setState(e){this.state=e}startScreenShake(e,t){this.shakeDuration=e,this.shakeIntensity=t,this.currentShakeTime=performance.now()}handlePauseMenuClick(e,t){const s=this.canvas.width/2-150,i=this.canvas.height/2,n=300,a=60,r=this.canvas.width/2-150,o=this.canvas.height/2+80;if(e>=s&&e<=s+n&&t>=i&&t<=i+a){this.state="MAIN_MENU",this.mainMenu&&this.mainMenu.show();return}if(e>=r&&e<=r+n&&t>=o&&t<=o+a){this.resetGame(this.selectedCharacterData);return}}initInput(){window.addEventListener("keydown",e=>{if(this.state==="CHARACTER_SELECT")this.characterSelectPanel.handleInput(e);else if(this.state==="GAME"&&e.key==="Escape")this.state="PAUSE";else if(this.state==="PAUSE"&&e.key==="Escape")this.state="GAME";else if(this.state==="GAME_OVER"&&e.key==="Enter")this.resetGame(this.selectedCharacterData);else if(this.state==="GAME"&&(e.code==="Space"||e.key===" "||e.key==="Spacebar")){try{this.player?.activateAbility?.()}catch{}e.preventDefault()}else e.key.toLowerCase()==="b"?this.brightenMode=!this.brightenMode:e.key.toLowerCase()==="m"&&(this.hud.showMinimap=!this.hud.showMinimap)}),this.canvas.addEventListener("mousemove",e=>{if(this.state==="CHARACTER_SELECT"){const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top;this.characterSelectPanel.handleMouseMove(s,i,this.canvas)}}),this.canvas.addEventListener("click",e=>{const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top;this.state==="GAME_OVER"&&this.handlePauseMenuClick(s,i)}),this.canvas.addEventListener("mousedown",e=>{if(this.state==="CHARACTER_SELECT"){const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top,n=this.characterSelectPanel.handleClick(s,i,this.canvas);n&&typeof n=="object"&&n.stats&&n.defaultWeapon!==void 0?(this.selectedCharacterData=n,this.state="MAIN_MENU",this.mainMenu.show()):n==="backToMainMenu"&&(this.state="MAIN_MENU",this.mainMenu.show())}else if(this.state==="PAUSE"){const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top;this.handlePauseMenuClick(s,i)}}),window.addEventListener("startGame",e=>{const t=e;t.detail&&(this.selectedCharacterData=t.detail,this.state="GAME",this.mainMenu.hide(),this.resetGame(this.selectedCharacterData),this.upgradePanel||(this.upgradePanel=new ce(this.player,this)))})}resetGame(e){!this.player||e?(this.player=new ae(this.worldW/2,this.worldH/2,e),this.player.radius=18):this.player.resetState(),this.upgradePanel&&(this.upgradePanel.player=this.player),this.enemySpatialGrid.clear(),this.bulletSpatialGrid.clear(),this.enemyManager=new ne(this.player,this.bulletSpatialGrid,this.particleManager,this.assetLoader,1),this.bossManager=new le(this.player,this.particleManager),this.player.setEnemyProvider(()=>this.enemyManager.getEnemies()),this.player.setGameContext(this),this.explosionManager=new oe(this.particleManager,this.enemyManager,this.player,(t,s)=>this.startScreenShake(t,s)),this.hud=new re(this.player,this.assetLoader),this.gameTime=0,this.dpsLog=[],this.totalDamageDealt=0,this.dpsHistory=[],this.shakeDuration=0,this.shakeIntensity=0,this.currentShakeTime=0,this.state="GAME"}setMainMenu(e){this.mainMenu=e}setCharacterSelectPanel(e){this.characterSelectPanel=e}setUpgradePanel(e){this.upgradePanel=e}pause(){this.gameLoop&&this.gameLoop.stop(),this.state="PAUSE"}resume(){this.gameLoop&&this.gameLoop.start(),this.state="GAME"}start(){this.gameLoop&&this.gameLoop.start()}startCinematicAndGame(){this.state="CINEMATIC",this.cinematic.start(()=>{this.state="GAME"})}showCharacterSelect(){this.state="CHARACTER_SELECT",m.debug("Entering CHARACTER_SELECT state");try{this.mainMenu?.hideMenuElement();const e=document.getElementById("character-select-panel");e&&(e.style.display="none");const t=document.getElementById("main-menu");t&&(t.style.display="none");const s=document.getElementById("gameCanvas");s&&(s.style.display="block",s.style.zIndex="100")}catch{}}worldToScreenX(e){return e-this.camX+this.canvas.width/2}worldToScreenY(e){return e-this.camY+this.canvas.height/2}async init(){try{await this.assetLoader.loadAllFromManifest("/assets"),await this.assetLoader.loadImage("/assets/player/cyber_runner.png"),await this.assetLoader.loadImage("/assets/player/psionic_weaver.png"),await this.assetLoader.loadImage("/assets/player/bio_engineer.png"),await this.assetLoader.loadImage("/assets/player/titan_mech.png"),await this.assetLoader.loadImage("/assets/player/ghost_operative.png"),await this.assetLoader.loadImage("/assets/player/data_sorcerer.png"),await this.assetLoader.loadImage("/assets/player/neural.nomad.png"),await this.assetLoader.loadImage("/assets/player/shadow_operative.png"),await this.assetLoader.loadImage("/assets/player/tech_warrior.png"),await this.assetLoader.loadImage("/assets/player/heavy_gunner.png"),await this.assetLoader.loadImage("/assets/player/wasteland_scavenger.png"),await this.assetLoader.loadImage("/assets/player/rogue_hacker.png");const e=this.assetLoader.getImage("/assets/player/cyber_runner.png");e?m.info(`[Game.init] cyber_runner.png loaded, src: ${e.src}`):m.warn("[Game.init] cyber_runner.png NOT loaded!");const t=this.assetLoader.getImage("/assets/player/psionic_weaver.png");t?m.info(`[Game.init] psionic_weaver.png loaded, src: ${t.src}`):m.warn("[Game.init] psionic_weaver.png NOT loaded!");const s=this.assetLoader.getImage("/assets/player/bio_engineer.png");s?m.info(`[Game.init] bio_engineer.png loaded, src: ${s.src}`):m.warn("[Game.init] bio_engineer.png NOT loaded!")}catch(e){m.error("Error loading assets:",e)}}drawPause(){this.ctx.save(),this.ctx.globalAlpha=1,this.ctx.fillStyle="#fff",this.ctx.font="bold 48px Orbitron, sans-serif",this.ctx.textAlign="center",this.ctx.fillText("PAUSED",this.canvas.width/2,100);const e=this.canvas.width/2-150,t=this.canvas.height/2,s=300,i=60;this.ctx.strokeStyle="#00FFFF",this.ctx.lineWidth=2,this.ctx.strokeRect(e,t,s,i),this.ctx.fillStyle="rgba(25, 25, 40, 0.8)",this.ctx.fillRect(e,t,s,i),this.ctx.fillStyle="#00FFFF",this.ctx.font="bold 28px Orbitron, sans-serif",this.ctx.fillText("MAIN MENU",this.canvas.width/2,t+i/2+8);const n=this.canvas.width/2-150,a=this.canvas.height/2+80;this.ctx.strokeStyle="#00FFFF",this.ctx.lineWidth=2,this.ctx.strokeRect(n,a,s,i),this.ctx.fillStyle="rgba(25, 25, 40, 0.8)",this.ctx.fillRect(n,a,s,i),this.ctx.fillStyle="#00FFFF",this.ctx.font="bold 28px Orbitron, sans-serif",this.ctx.fillText("RESTART",this.canvas.width/2,a+i/2+8),this.ctx.restore()}drawGameOver(){this.ctx.save(),this.ctx.globalAlpha=.7,this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,this.ctx.fillStyle="#f00",this.ctx.font="bold 64px Orbitron, sans-serif",this.ctx.textAlign="center",this.ctx.fillText("GAME OVER",this.canvas.width/2,this.canvas.height/2-100);const e=this.canvas.width/2-150,t=this.canvas.height/2,s=300,i=60;this.ctx.strokeStyle="#00FFFF",this.ctx.lineWidth=2,this.ctx.strokeRect(e,t,s,i),this.ctx.fillStyle="rgba(25, 25, 40, 0.8)",this.ctx.fillRect(e,t,s,i),this.ctx.fillStyle="#00FFFF",this.ctx.font="bold 28px Orbitron, sans-serif",this.ctx.fillText("MAIN MENU",this.canvas.width/2,t+i/2+8);const n=this.canvas.width/2-150,a=this.canvas.height/2+80;this.ctx.strokeStyle="#00FFFF",this.ctx.lineWidth=2,this.ctx.strokeRect(n,a,s,i),this.ctx.fillStyle="rgba(25, 25, 40, 0.8)",this.ctx.fillRect(n,a,s,i),this.ctx.fillStyle="#00FFFF",this.ctx.font="bold 28px Orbitron, sans-serif",this.ctx.fillText("RESTART",this.canvas.width/2,a+i/2+8),this.ctx.fillStyle="#fff",this.ctx.font="24px Orbitron, sans-serif",this.ctx.restore()}update(e){if(this.state==="GAME"){this.gameTime+=e/1e3,this.player.update(e),this.explosionManager?.update(),this.enemyManager.update(e,this.gameTime,this.bulletManager.bullets),this.bossManager.update(e,this.gameTime),this.bulletManager.update(),this.particleManager.update(),this.damageTextManager.update(),this.enemySpatialGrid.clear();for(const a of this.enemyManager.enemies)a.active&&this.enemySpatialGrid.insert(a);this.bulletSpatialGrid.clear();for(const a of this.bulletManager.bullets)a.active&&this.bulletSpatialGrid.insert(a);const t=this.bossManager.getActiveBoss();if(t){const a=this.bulletSpatialGrid.query(t.x,t.y,t.radius);for(let r=0;r<a.length;r++){const o=a[r];if(!o.active)continue;const c=o.x-t.x,d=o.y-t.y;Math.hypot(c,d)<t.radius+o.radius&&(t.hp-=o.damage,t._damageFlash=12,o.active=!1,this.particleManager.spawn(t.x,t.y,1,"#FFD700"),window.dispatchEvent(new CustomEvent("damageDealt",{detail:{amount:o.damage,isCritical:!1}})))}}const s=performance.now();for(;this.dpsHistory.length>0&&s-this.dpsHistory[0].time>this.dpsWindow;)this.dpsHistory.shift();const n=this.dpsHistory.reduce((a,r)=>a+r.damage,0)/this.dpsWindow*1e3;this.hud.currentDPS=n,this.camX+=(this.player.x-this.canvas.width/2-this.camX)*this.camLerp,this.camY+=(this.player.y-this.canvas.height/2-this.camY)*this.camLerp,this.camX=Math.max(0,Math.min(this.camX,this.worldW-this.canvas.width)),this.camY=Math.max(0,Math.min(this.camY,this.worldH-this.canvas.height)),this.player.hp<=0&&(this.state="GAME_OVER")}else this.state==="CINEMATIC"&&(this.cinematic.update(),this.cinematic.isFinished()&&(this.state="GAME"))}render(e){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.brightenMode?this.ctx.filter="brightness(1.2)":this.ctx.filter="none";let t=0,s=0;this.shakeDuration>0&&(performance.now()-this.currentShakeTime<this.shakeDuration?(t=(Math.random()-.5)*2*this.shakeIntensity,s=(Math.random()-.5)*2*this.shakeIntensity):this.shakeDuration=0);const i=document.getElementById("gameCanvas");switch(i&&(["GAME","CINEMATIC","CHARACTER_SELECT","UPGRADE_MENU","PAUSE","GAME_OVER"].includes(this.state)?(i.style.display="block",i.style.zIndex="10"):i.style.zIndex="-1"),this.state){case"GAME":case"PAUSE":case"UPGRADE_MENU":case"GAME_OVER":this.ctx.save();const n=this.ctx.createLinearGradient(0,0,0,this.canvas.height);if(n.addColorStop(0,"#0a0a1a"),n.addColorStop(.5,"#181825"),n.addColorStop(1,"#232347"),this.ctx.fillStyle=n,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.backgroundImage&&this.backgroundImage.complete&&this.backgroundImage.naturalWidth>0&&this.backgroundImage.naturalHeight>0){this.ctx.save(),this.ctx.globalAlpha=.85;const a=this.backgroundImage.naturalWidth,r=this.backgroundImage.naturalHeight,o=Math.floor(this.camX/a)*a,c=Math.floor(this.camY/r)*r;for(let d=o;d<this.camX+this.canvas.width;d+=a)for(let p=c;p<this.camY+this.canvas.height;p+=r)this.ctx.drawImage(this.backgroundImage,d-this.camX,p-this.camY,a,r);this.ctx.globalAlpha=1,this.ctx.restore()}this.ctx.restore(),this.ctx.save(),this.ctx.translate(-this.camX+t,-this.camY+s),this.enemyManager.draw(this.ctx,this.camX,this.camY),this.bulletManager.draw(this.ctx),this.player.draw(this.ctx),this.particleManager.draw(this.ctx),this.explosionManager?.draw(this.ctx),this.bossManager.draw(this.ctx),this.ctx.restore(),this.damageTextManager.draw(this.ctx,this.camX,this.camY),this.hud.draw(this.ctx,this.gameTime,this.enemyManager.getEnemies(),this.worldW,this.worldH,this.player.upgrades),this.state==="PAUSE"?this.drawPause():this.state==="GAME_OVER"&&this.drawGameOver();break;case"MAIN_MENU":i&&(i.style.zIndex="-1");break;case"CHARACTER_SELECT":this.characterSelectPanel.draw(this.ctx,this.canvas);break;case"CINEMATIC":this.cinematic.draw(this.ctx,this.canvas);break}}handleDamageDealt(e){const t=e.detail.amount,s=e.detail.isCritical||!1;this.dpsHistory.push({time:performance.now(),damage:t}),this.damageTextManager.spawn(this.player.x,this.player.y,t,void 0,s)}handleMortarExplosion(e){const{x:t,y:s,damage:i,hitEnemy:n,radius:a}=e.detail;this.explosionManager?.triggerExplosion(t,s,i,n,a??100)}handleEnemyDeathExplosion(e){const{x:t,y:s,damage:i,radius:n,color:a}=e.detail;this.explosionManager?.triggerExplosion(t,s,i,void 0,n??50,a??"#FF4500")}};Y.neonColors=["#00FFFF","#FF00FF","#FFD700","#00FF99","#FF0055","#00BFFF"];let X=Y;class Ce{constructor(e){this.gameInstance=e,this.mainMenuElement=document.getElementById("main-menu"),this.startGameButton=document.getElementById("start-game-btn"),this.characterSelectButton=document.getElementById("character-select-btn"),this.startGameButton&&this.startGameButton.addEventListener("click",()=>{this.gameInstance.selectedCharacterData?window.dispatchEvent(new CustomEvent("startGame",{detail:this.gameInstance.selectedCharacterData})):alert("Please select a character first!")}),this.characterSelectButton&&this.characterSelectButton.addEventListener("click",()=>{m.debug("Character Select button clicked");const t=document.getElementById("character-select-panel");t&&(t.style.display="none"),window.dispatchEvent(new CustomEvent("showCharacterSelect"))}),this.updateStartButtonState(),window.addEventListener("characterSelected",t=>{const s=t;this.gameInstance.selectedCharacterData=s.detail,this.updateStartButtonState()})}show(){this.mainMenuElement&&(this.mainMenuElement.style.display="flex"),this.updateStartButtonState()}hide(){this.mainMenuElement&&(this.mainMenuElement.style.display="none")}hideMenuElement(){this.mainMenuElement&&(this.mainMenuElement.style.display="none")}updateStartButtonState(){this.startGameButton&&(this.gameInstance.selectedCharacterData?(this.startGameButton.disabled=!1,this.startGameButton.textContent=`START GAME (${this.gameInstance.selectedCharacterData.name})`):(this.startGameButton.disabled=!0,this.startGameButton.textContent="START GAME (Select Character First)"))}getMainMenuElement(){return this.mainMenuElement}drawMatrixBackground(e,t){const i=Math.floor(t.width/32);if(!this.matrixDrops||this.matrixDrops.length!==i){this.matrixDrops=new Array(i);for(let n=0;n<i;n++)this.matrixDrops[n]=1}e.fillStyle="#000",e.fillRect(0,0,t.width,t.height),e.fillStyle="rgba(0,32,48,0.5)",e.fillRect(0,0,t.width,t.height),e.font="32px monospace",(!this._matrixChars||this._matrixChars.length!==i)&&(this._matrixChars=new Array(i));for(let n=0;n<i;n++){let a=Math.random()<.08;a?(e.fillStyle=Math.random()<.5?"#00eaff":"#fff",this._matrixChars[n]=String.fromCharCode(12448+Math.random()*96|0)):(e.fillStyle="#00eaff",(!this._matrixChars[n]||this.matrixDrops[n]%18===0)&&(this._matrixChars[n]=String.fromCharCode(12448+Math.random()*96|0))),e.fillText(this._matrixChars[n],n*32,this.matrixDrops[n]*32),this.matrixDrops[n]*32>t.height&&Math.random()>.99&&(this.matrixDrops[n]=0),this.matrixDrops[n]+=a?1.5:.25}}}class Ee{constructor(e){this.characters=[],this.selectedCharacterIndex=0,this.hoveredCharacterIndex=null,this.gridCols=4,this.gridRows=3,this.charBoxSize=150,this.backButton={x:0,y:0,width:180,height:40,isHovered:!1},this.currentFrame=0,this.frameTimer=0,this.animationSpeed=8,this.fadeAlpha=0,this.handleResize=()=>{this.characterSelectCanvas&&(this.characterSelectCanvas.width=window.innerWidth,this.characterSelectCanvas.height=window.innerHeight)},this.assetLoader=e,this.panelElement=document.getElementById("character-select-panel"),this.characterGrid=document.getElementById("character-grid"),this.detailName=document.getElementById("detail-name"),this.detailDescription=document.getElementById("detail-description"),this.detailHp=document.getElementById("detail-hp"),this.detailSpeed=document.getElementById("detail-speed"),this.detailDamage=document.getElementById("detail-damage"),this.selectButton=document.getElementById("select-character-btn"),this.characterPortraitPreview=document.getElementById("character-portrait-preview"),this.characterSelectCanvas=document.getElementById("character-select-canvas"),this.detailWeapon=document.getElementById("detail-weapon"),this.backButtonEl=document.getElementById("back-to-main-btn"),this.initializeCharacters(),this.render(),this.selectButton?.addEventListener("click",()=>this.handleSelect()),this.backButtonEl?.addEventListener("click",()=>this.handleBack())}show(){this.panelElement&&(this.panelElement.style.display="flex",m.debug("CharacterSelectPanel: show() called, panelElement display set to flex."),this.characterSelectCanvas&&(this.characterSelectCanvas.width=window.innerWidth,this.characterSelectCanvas.height=window.innerHeight,window.addEventListener("resize",this.handleResize),console.log("CharacterSelectPanel: Canvas resized and resize listener added.")),this.characterSelectCanvas&&(this.drawMatrixBackground(this.characterSelectCanvas.getContext("2d"),this.characterSelectCanvas),console.log("CharacterSelectPanel: Matrix background drawn.")),this.render(),console.log("CharacterSelectPanel: render() called from show()."),setTimeout(()=>{if(this.panelElement){const s=window.getComputedStyle(this.panelElement);console.log("Computed Style - .character-select-panel:",{display:s.display,flexDirection:s.flexDirection,alignItems:s.alignItems,justifyContent:s.justifyContent,width:s.width,height:s.height,zIndex:s.zIndex})}const e=document.querySelector(".character-select-content");if(e){const s=window.getComputedStyle(e);console.log("Computed Style - .character-select-content:",{display:s.display,flexDirection:s.flexDirection,alignItems:s.alignItems,justifyContent:s.justifyContent,gap:s.gap,width:s.width,maxWidth:s.maxWidth,flexWrap:s.flexWrap,zIndex:s.zIndex})}if(this.characterGrid){const s=window.getComputedStyle(this.characterGrid);console.log("Computed Style - .character-grid:",{display:s.display,gridTemplateColumns:s.gridTemplateColumns,gridTemplateRows:s.gridTemplateRows,gap:s.gap,minWidth:s.minWidth,maxWidth:s.maxWidth,padding:s.padding,zIndex:s.zIndex})}const t=document.querySelector(".character-info-box");if(t){const s=window.getComputedStyle(t);console.log("Computed Style - .character-info-box:",{display:s.display,flexDirection:s.flexDirection,alignItems:s.alignItems,justifyContent:s.justifyContent,minWidth:s.minWidth,maxWidth:s.maxWidth,minHeight:s.minHeight,alignSelf:s.alignSelf,zIndex:s.zIndex})}console.log("Number of characters rendered:",this.characterGrid?.children.length)},500))}hide(){this.panelElement&&(this.panelElement.style.display="none",this.characterSelectCanvas&&window.removeEventListener("resize",this.handleResize))}render(){if(console.log("CharacterSelectPanel: render() called."),!this.characterGrid){m.error("CharacterSelectPanel: characterGrid element not found!");return}this.characterGrid.innerHTML="",console.log("CharacterSelectPanel: characterGrid cleared."),this.characters.slice(0,12).forEach((e,t)=>{const s=document.createElement("div");s.className="character-box",t===this.selectedCharacterIndex&&s.classList.add("selected"),s.textContent=e.name,s.addEventListener("click",()=>{this.selectedCharacterIndex=t,this.render()}),this.characterGrid&&(this.characterGrid.appendChild(s),console.log(`CharacterSelectPanel: Appended character box for ${e.name}.`))}),this.updateDetailsPanel(),console.log("CharacterSelectPanel: updateDetailsPanel() called from render().")}updateDetailsPanel(){const e=this.characters[this.selectedCharacterIndex];!e||!this.detailName||!this.detailDescription||!this.detailHp||!this.detailSpeed||!this.detailDamage||(this.detailName.textContent=e.name,this.detailDescription.textContent=e.description,this.detailHp.textContent=e.stats.hp?.toString()||"N/A",this.detailSpeed.textContent=e.stats.speed?.toString()||"N/A",this.detailDamage.textContent=e.stats.damage?.toString()||"N/A",this.characterPortraitPreview&&(this.characterPortraitPreview.src=e.icon||""),this.detailWeapon&&(this.detailWeapon.textContent=e.defaultWeapon?.toString()||"N/A"))}handleSelect(){const e=this.characters[this.selectedCharacterIndex];e&&(window.dispatchEvent(new CustomEvent("startGame",{detail:e})),this.hide())}handleBack(){this.hide(),window.dispatchEvent(new CustomEvent("showMainMenu"))}initializeCharacters(){const e={hp:100,speed:2,damage:10,strength:5,intelligence:5,agility:5,luck:5,defense:5,attackSpeed:.5},t=[{name:"Cyber Runner",description:"A fast and agile character with high evasion.",statModifiers:{speed:.4,agility:3,luck:2,hp:-20,defense:-2,attackSpeed:.54},uniqueTraits:["Quick Reflexes","Evasive Maneuvers"],shape:"circle",color:"#00FFFF",defaultWeapon:l.RUNNER_GUN,weaponTypes:[l.RUNNER_GUN,l.PISTOL,l.SHOTGUN]},{name:"Tech Warrior",description:"A durable character with strong defenses.",statModifiers:{hp:50,defense:4,strength:3,speed:-.4,agility:-1,attackSpeed:.475},uniqueTraits:["Reinforced Plating","Taunt"],shape:"square",color:"#FF0000",defaultWeapon:l.WARRIOR_CANNON,weaponTypes:[l.WARRIOR_CANNON,l.PISTOL,l.LASER]},{name:"Data Sorcerer",description:"A character specializing in powerful ranged attacks.",statModifiers:{intelligence:5,damage:10,hp:-10,strength:-2,defense:-1,attackSpeed:.525},uniqueTraits:["Arcane Blast","Mana Shield"],shape:"triangle",color:"#FFFF00",defaultWeapon:l.SORCERER_ORB,weaponTypes:[l.SORCERER_ORB,l.RICOCHET,l.HOMING]},{name:"Shadow Operative",description:"Stealthy and precise, excels in critical strikes.",statModifiers:{agility:4,luck:3,damage:5,hp:-30,defense:-3,attackSpeed:.56},uniqueTraits:["Stealth Field","Critical Strike"],shape:"circle",color:"#800080",defaultWeapon:l.SHADOW_DAGGER,weaponTypes:[l.SHADOW_DAGGER,l.PISTOL,l.RAPID]},{name:"Bio-Engineer",description:"Supports allies and debuffs enemies.",statModifiers:{intelligence:3,hp:20,defense:2,damage:-2,attackSpeed:.49},uniqueTraits:["Healing Drone","Poison Cloud"],shape:"square",color:"#00FF00",defaultWeapon:l.BIO_TOXIN,weaponTypes:[l.BIO_TOXIN,l.PLASMA,l.TRI_SHOT]},{name:"Rogue Hacker",description:"Disrupts enemy systems and controls the battlefield.",statModifiers:{intelligence:4,agility:2,luck:1,damage:2,defense:-1,attackSpeed:.535},uniqueTraits:["System Overload","EMP Burst"],shape:"triangle",color:"#FFA500",defaultWeapon:l.HACKER_VIRUS,weaponTypes:[l.HACKER_VIRUS,l.BEAM,l.HOMING]},{name:"Heavy Gunner",description:"Unloads a barrage of sustained fire.",statModifiers:{strength:5,hp:30,damage:7,speed:-.5,agility:-2,attackSpeed:.46},uniqueTraits:["Suppressive Fire","Heavy Armor"],shape:"square",color:"#A52A2A",defaultWeapon:l.GUNNER_MINIGUN,weaponTypes:[l.GUNNER_MINIGUN,l.SHOTGUN,l.RAILGUN]},{id:"psionic_weaver",name:"Psionic Weaver",description:"Manipulates psychic energy for devastating effects.",statModifiers:{intelligence:6,damage:12,hp:-15,strength:-3,attackSpeed:.52},uniqueTraits:["Mind Control","Psychic Nova"],shape:"circle",color:"#FFC0CB",defaultWeapon:l.PSIONIC_WAVE,weaponTypes:[l.PSIONIC_WAVE,l.BEAM,l.PLASMA]},{name:"Wasteland Scavenger",description:"Resourceful and adaptable, thrives in harsh environments.",statModifiers:{luck:4,defense:3,hp:10,speed:-.1,attackSpeed:.505},uniqueTraits:["Jury-Rig","Scavenge"],shape:"square",color:"#808080",defaultWeapon:l.SCAVENGER_SLING,weaponTypes:[l.SCAVENGER_SLING,l.RICOCHET,l.SHOTGUN]},{name:"Neural Nomad",description:"A wanderer with enhanced cognitive abilities.",statModifiers:{intelligence:3,agility:3,speed:.2,hp:-10,attackSpeed:.515},uniqueTraits:["Data Stream","Cognitive Boost"],shape:"triangle",color:"#008080",defaultWeapon:l.NOMAD_NEURAL,weaponTypes:[l.NOMAD_NEURAL,l.LASER,l.BEAM]},{name:"Ghost Operative",description:"A master of stealth and precision, striking from the shadows.",statModifiers:{agility:5,luck:5,damage:15,hp:-40,defense:-5,attackSpeed:.575},uniqueTraits:["Invisibility Cloak","One-Shot Kill"],shape:"circle",color:"#FFFFFF",defaultWeapon:l.GHOST_SNIPER,weaponTypes:[l.GHOST_SNIPER,l.RAILGUN,l.PISTOL]},{name:"Titan Mech",description:"A heavily armored war machine, slow but incredibly resilient.",statModifiers:{hp:70,strength:6,defense:6,speed:-.8,agility:-3,attackSpeed:.45},uniqueTraits:["Siege Mode","Self-Repair"],shape:"square",color:"#444444",defaultWeapon:l.MECH_MORTAR,weaponTypes:[l.MECH_MORTAR,l.RAILGUN,l.SHOTGUN]}];this.characters=t.map(s=>{const i={...e};if(s.statModifiers){for(const a in s.statModifiers)if(Object.prototype.hasOwnProperty.call(s.statModifiers,a)){const r=s.statModifiers[a],o=i[a]??0;i[a]=o+r}}return{id:(s.id??s.name?.toLowerCase().replace(/\s+/g,"_")??"").replace(/-/g,"_"),sprite:(s.id??s.name?.toLowerCase().replace(/\s+/g,"_")??"").replace(/-/g,"_"),name:s.name,description:s.description,stats:i,traits:s.uniqueTraits,shape:s.shape,color:s.color,defaultWeapon:s.defaultWeapon,weaponTypes:s.weaponTypes}})}draw(e,t){e.save(),e.fillStyle="#1a1a2e",e.fillRect(0,0,t.width,t.height),e.fillStyle="#00FFFF",e.font="bold 48px Orbitron, sans-serif",e.textAlign="center",e.shadowColor="#00FFFF",e.shadowBlur=20,e.fillText("CHARACTER SELECTION",t.width/2,80),e.shadowBlur=0;const s=this.gridCols*this.charBoxSize;this.gridRows*this.charBoxSize;const i=(t.width-s)/2,n=150;this.characters.forEach((v,E)=>{const b=E%this.gridCols,I=Math.floor(E/this.gridCols),R=i+b*this.charBoxSize,C=n+I*this.charBoxSize;e.strokeStyle="#00FFFF",e.lineWidth=3,e.fillStyle="rgba(25, 25, 40, 0.8)";const ee=E===this.selectedCharacterIndex;ee?(e.strokeStyle="#FF0000",e.lineWidth=5,e.shadowColor="#FF0000",e.shadowBlur=25):E===this.hoveredCharacterIndex?(e.strokeStyle="#ADD8E6",e.shadowColor="#ADD8E6",e.shadowBlur=6):(e.strokeStyle="#00FFFF",e.lineWidth=3,e.shadowBlur=0,e.shadowColor=""),e.strokeRect(R,C,this.charBoxSize,this.charBoxSize),ee&&(e.save(),e.lineWidth=2,e.strokeStyle="#FF0000",e.strokeRect(R-4,C-4,this.charBoxSize+8,this.charBoxSize+8),e.restore());const j=e.createLinearGradient(R+3,C+3,R+this.charBoxSize-6,C+this.charBoxSize-6);j.addColorStop(0,"rgba(0,255,255,0.35)"),j.addColorStop(1,"rgba(0,0,255,0.35)"),e.fillStyle=j,e.fillRect(R+3,C+3,this.charBoxSize-6,this.charBoxSize-6),e.shadowBlur=0,e.fillStyle=v.color??"#888",e.strokeStyle=v.color??"#00FFFF",e.lineWidth=2,this.hoveredCharacterIndex===E?(e.shadowColor="#FFFFFF",e.shadowBlur=6):e.shadowBlur=0;const P=this.charBoxSize*.3,N=R+this.charBoxSize/2,O=C+this.charBoxSize/2-10;switch(e.beginPath(),v.shape){case"circle":e.arc(N,O,P,0,Math.PI*2);break;case"square":e.rect(N-P,O-P,P*2,P*2);break;case"triangle":e.moveTo(N,O-P),e.lineTo(N+P,O+P),e.lineTo(N-P,O+P),e.closePath();break}e.fill(),e.stroke(),e.fillStyle="#FFFFFF",e.font="16px Orbitron, sans-serif",e.textAlign="center";let W=v.name;const te=this.charBoxSize*.9;if(e.measureText(W).width>te){let T=W;for(;e.measureText(T+"...").width>te&&T.length>0;)T=T.substring(0,T.length-1);W=T+"..."}e.fillText(W,R+this.charBoxSize/2,C+this.charBoxSize-25)});const a=i+s+40,r=n,o=340,c=320;e.save(),e.globalAlpha=.98,e.fillStyle="rgba(10,40,60,0.97)",e.strokeStyle="#00FFFF",e.lineWidth=3,e.fillRect(a,r,o,c),e.strokeRect(a,r,o,c),e.restore();let d=this.selectedCharacterIndex;this.hoveredCharacterIndex!==null&&this.hoveredCharacterIndex>=0&&(d=this.hoveredCharacterIndex);const f=this.characters[d].defaultWeapon,u=f!==void 0?F[f]:void 0;if(e.save(),e.fillStyle="#00FFFF",e.font="bold 28px Orbitron, sans-serif",e.textAlign="center",e.fillText("Weapon Info",a+o/2,r+44),u){if(e.font="bold 22px Orbitron, sans-serif",e.textAlign="left",e.fillText(u.name,a+24,r+84),u.icon){const I=this.assetLoader.getImage(u.icon);I&&e.drawImage(I,a+24,r+54,64,64)}e.font="18px Orbitron, sans-serif",e.fillStyle="#CCCCFF";let v=r+134;const E=24;if(e.fillText(`Type: ${u.projectileVisual.type}`,a+E,v),v+=26,e.fillText(`Damage: ${u.salvo}x`,a+E,v),v+=26,e.fillText(`Cooldown: ${u.cooldown}`,a+E,v),v+=26,e.fillText(`Speed: ${u.speed}`,a+E,v),v+=26,e.fillText(`Range: ${u.range}`,a+E,v),v+=26,u.traits&&u.traits.length>0){e.font="18px Orbitron, sans-serif",e.fillStyle="#66FF88";let I=`Traits: ${u.traits.join(", ")}`,R=[];for(;I.length>0;){let C=I.length;for(;e.measureText(I.substring(0,C)).width>o-2*E&&C>0;)C--;R.push(I.substring(0,C)),I=I.substring(C).trim()}for(const C of R)e.fillText(C,a+E,v),v+=22}e.font="italic 16px Orbitron, sans-serif",e.fillStyle="#FFD700";let b="";switch(u.id){case l.PISTOL:b="Standard issue sidearm. Reliable, but not flashy.";break;case l.SHOTGUN:b="Close-range devastation. Favored by enforcers.";break;case l.TRI_SHOT:b="Triple-barrel tech for maximum spread.";break;case l.RAPID:b="High rate of fire, low stopping power.";break;case l.LASER:b="Energy beam, precise and deadly.";break;case l.BEAM:b="Heavy plasma beam, melts through armor.";break;case l.RICOCHET:b="Bounces off surfaces, unpredictable.";break;case l.HOMING:b="Autonomous drone seeks out targets.";break;case l.RAILGUN:b="Accelerates projectiles to hypersonic speeds.";break;case l.PLASMA:b="Superheated plasma, burns on contact.";break;case l.RUNNER_GUN:b="Lightweight, designed for speed.";break;case l.WARRIOR_CANNON:b="Heavy cannon, built for brute force.";break;case l.SORCERER_ORB:b="Arcane energy, unpredictable flight.";break;case l.SHADOW_DAGGER:b="Silent, deadly, and precise.";break;case l.BIO_TOXIN:b="Releases toxic clouds, weakens foes.";break;case l.HACKER_VIRUS:b="Disrupts enemy systems, EMP payload.";break;case l.GUNNER_MINIGUN:b="Suppressive fire, relentless barrage.";break;case l.PSIONIC_WAVE:b="Psychic energy, pierces defenses.";break;case l.SCAVENGER_SLING:b="Improvised weapon, unpredictable.";break;case l.NOMAD_NEURAL:b="Neural pulse, stuns and disrupts.";break;case l.GHOST_SNIPER:b="One shot, one kill. Stealthy.";break;case l.MECH_MORTAR:b="Siege weapon, massive explosions.";break;default:b="A weapon of unknown origin."}e.fillText(b,a+20,v+18)}else e.font="bold 22px Orbitron, sans-serif",e.fillText("No Weapon",a+o/2,r+84);e.restore();const g=this.hoveredCharacterIndex??this.selectedCharacterIndex,M=this.characters[g];t.width/2;const y=40,w=t.height-320,S=t.width-80,_=300;e.fillStyle="rgba(10,12,40,0.95)",e.fillRect(y,w,S,_),e.strokeStyle="#00FFFF",e.lineWidth=2,e.strokeRect(y,w,S,_);const L=24,G=y+L,U=y+S/2+L,q=w+40;e.fillStyle="#00FFFF",e.font="bold 32px Orbitron, sans-serif",e.textAlign="center",e.fillText(M.name,y+S/2,q),e.fillStyle="#CCCCFF",e.font="18px Orbitron, sans-serif",e.textAlign="left";const de=G,K=q+28,pe=S-L*2,$=this.wrapText(e,M.description,Math.floor(pe/10));for(let v=0;v<$.length;v++)e.fillText($[v],de,K+v*22);e.fillStyle="#FFFF66",e.font="18px Orbitron, sans-serif";const A=M.stats,H=[["HP",A.hp??0],["Speed",A.speed??0],["Damage",A.damage??0],["Strength",A.strength??0],["Intelligence",A.intelligence??0]],Z=[["Defense",A.defense??0],["Agility",A.agility??0],["Luck",A.luck??0],["Attack Speed",A.attackSpeed??1],["Magnet Radius",A.magnetRadius??0]],V=K+$.length*22+12,B=24;for(let v=0;v<H.length;v++)e.fillText(`${H[v][0]}: ${H[v][1]}`,G,V+v*B),e.fillText(`${Z[v][0]}: ${Z[v][1]}`,U,V+v*B);e.fillStyle="#66FF88",e.font="18px Orbitron, sans-serif";const J=V+H.length*B+8;e.fillText("Unique Traits:",U,J);let Q=J+B;(M.traits??[]).forEach(v=>{e.fillText(`- ${v}`,U,Q),Q+=B}),this.backButton.x=y+12,this.backButton.y=w+_-this.backButton.height-12,e.strokeStyle=this.backButton.isHovered?"#FF00FF":"#00FFFF",e.lineWidth=2,e.fillStyle=this.backButton.isHovered?"rgba(255,0,255,0.12)":"rgba(0,255,255,0.06)",this.backButton.isHovered&&(e.shadowColor="#FF00FF",e.shadowBlur=12),e.strokeRect(this.backButton.x,this.backButton.y,this.backButton.width,this.backButton.height),e.fillRect(this.backButton.x,this.backButton.y,this.backButton.width,this.backButton.height),e.shadowBlur=0,e.fillStyle=this.backButton.isHovered?"#FF00FF":"#00FFFF",e.font="bold 18px Orbitron, sans-serif",e.textAlign="center",e.fillText("BACK TO MAIN MENU",this.backButton.x+this.backButton.width/2,this.backButton.y+this.backButton.height/2+6),e.restore()}handleInput(e){let t=this.selectedCharacterIndex;e.key==="ArrowLeft"?t--:e.key==="ArrowRight"?t++:e.key==="ArrowUp"?t-=this.gridCols:e.key==="ArrowDown"&&(t+=this.gridCols),t<0?t=this.characters.length+t:t>=this.characters.length&&(t=t-this.characters.length),this.selectedCharacterIndex=t}handleMouseMove(e,t,s){const i=(s.width-this.gridCols*this.charBoxSize)/2,n=150;let a=null;this.characters.forEach((c,d)=>{const p=d%this.gridCols,f=Math.floor(d/this.gridCols),u=i+p*this.charBoxSize,g=n+f*this.charBoxSize;e>=u&&e<=u+this.charBoxSize&&t>=g&&t<=g+this.charBoxSize&&(a=d)}),this.hoveredCharacterIndex=a;const r=20,o=s.height-60;e>=r&&e<=r+this.backButton.width&&t>=o&&t<=o+this.backButton.height?this.backButton.isHovered=!0:this.backButton.isHovered=!1}handleClick(e,t,s){const i=(s.width-this.gridCols*this.charBoxSize)/2,n=150;for(let a=0;a<this.characters.length;a++){const r=a%this.gridCols,o=Math.floor(a/this.gridCols),c=i+r*this.charBoxSize,d=n+o*this.charBoxSize;if(e>=c&&e<=c+this.charBoxSize&&t>=d&&t<=d+this.charBoxSize)return this.selectedCharacterIndex=a,this.characters[a]}return e>=this.backButton.x&&e<=this.backButton.x+this.backButton.width&&t>=this.backButton.y&&t<=this.backButton.y+this.backButton.height?"backToMainMenu":null}getSelectedCharacter(){return this.characters[this.selectedCharacterIndex]}update(){this.frameTimer++,this.frameTimer>=60/this.animationSpeed&&(this.currentFrame++,this.frameTimer=0)}drawMatrixBackground(e,t){const i=Math.floor(t.width/32);if(!this.matrixDrops||this.matrixDrops.length!==i){this.matrixDrops=new Array(i);for(let n=0;n<i;n++)this.matrixDrops[n]=1}e.fillStyle="#000",e.fillRect(0,0,t.width,t.height),e.fillStyle="rgba(0,32,48,0.5)",e.fillRect(0,0,t.width,t.height),e.font="32px monospace",(!this._matrixChars||this._matrixChars.length!==i)&&(this._matrixChars=new Array(i));for(let n=0;n<i;n++){let a=Math.random()<.08;a?(e.fillStyle=Math.random()<.5?"#00eaff":"#fff",this._matrixChars[n]=String.fromCharCode(12448+Math.random()*96|0)):(e.fillStyle="#00eaff",(!this._matrixChars[n]||this.matrixDrops[n]%18===0)&&(this._matrixChars[n]=String.fromCharCode(12448+Math.random()*96|0))),e.fillText(this._matrixChars[n],n*32,this.matrixDrops[n]*32),this.matrixDrops[n]*32>t.height&&Math.random()>.99&&(this.matrixDrops[n]=0),this.matrixDrops[n]+=a?1.5:.25}requestAnimationFrame(()=>this.drawMatrixBackground(e,t))}wrapText(e,t,s){const i=t.split(" "),n=[];let a="";for(const r of i)(a+r).length<=s?a+=(a===""?"":" ")+r:(n.push(a),a=r);return n.push(a),n}}window.onload=async()=>{setTimeout(()=>{h.addEventListener("mousedown",o=>{if(!e.cinematic||!e.cinematic.active)return;const c=h.getBoundingClientRect(),d=o.clientX-c.left,p=o.clientY-c.top;e.cinematic.handleClick(d,p,h)&&m.info("[main.ts] Cinematic skipped via button")})},0);const h=document.getElementById("gameCanvas");if(!h){m.error('Canvas element with ID "gameCanvas" not found.');return}h.width=window.innerWidth,h.height=window.innerHeight,h.style.position="absolute",h.style.top="0",h.style.left="0",h.style.zIndex="-1",h.style.display="block";const e=new X(h),t=new Ce(e);e.setMainMenu(t),e.setState("MAIN_MENU"),m.info("[main.ts] Initial state set to MAIN_MENU"),await e.init(),m.info("[main.ts] Game assets loaded"),await e.assetLoader.loadManifest();const s=new Ee(e.assetLoader);e.setCharacterSelectPanel(s),z(async()=>{const{UpgradePanel:o}=await Promise.resolve().then(()=>ge);return{UpgradePanel:o}},void 0).then(({UpgradePanel:o})=>{const c=new o(e.player,e);e.setUpgradePanel(c),m.info("[main.ts] UpgradePanel instantiated and set.")}),z(async()=>{const{SoundManager:o}=await import("./SoundManager-48crnWyV.js");return{SoundManager:o}},__vite__mapDeps([0,1])).then(({SoundManager:o})=>{o.playMusic("assets/music/bg-music.mp3")}),e.start(),m.info("[main.ts] Game loop started"),t.show(),m.info("[main.ts] Main menu shown"),z(async()=>{const{SoundSettingsPanel:o}=await import("./SoundSettingsPanel-ynoVjs5B.js");return{SoundSettingsPanel:o}},__vite__mapDeps([2,1])).then(({SoundSettingsPanel:o})=>{new o().show(),m.info("[main.ts] SoundSettingsPanel shown")});let i=!1;function n(){i||z(async()=>{const{SoundManager:o}=await import("./SoundManager-48crnWyV.js");return{SoundManager:o}},__vite__mapDeps([0,1])).then(({SoundManager:o})=>{o.playMusic("/assets/music/bg-music.mp3"),m.info("[main.ts] Background music started"),i=!0})}window.addEventListener("startGame",o=>{n();const d=o.detail;m.info("[main.ts] startGame event received, selectedCharData:",d),e.resetGame(d),t.hide(),m.info("[main.ts] Main menu hidden, starting cinematic and game"),h.style.display="block",h.style.zIndex="10",e.startCinematicAndGame()}),window.addEventListener("showCharacterSelect",()=>{m.info("[main.ts] showCharacterSelect event received"),t.hide(),s.show(),h.style.display="block",h.style.zIndex="10"}),window.addEventListener("showMainMenu",()=>{m.info("[main.ts] showMainMenu event received"),s.hide(),t.show(),h.style.zIndex="-1"}),window.addEventListener("pauseGame",()=>{m.info("[main.ts] pauseGame event received"),e.pause()}),window.addEventListener("resumeGame",()=>{m.info("[main.ts] resumeGame event received"),e.resume(),h.style.display="block",h.style.zIndex="10"}),window.addEventListener("levelup",()=>{m.info("[main.ts] levelup event received, dispatching showUpgradePanel"),window.dispatchEvent(new CustomEvent("showUpgradePanel")),h.style.display="block",h.style.zIndex="10"});let a=!0;function r(){const o=t.getMainMenuElement();if(!o||o.style.display==="none"){a=!1;return}const c=h.getContext("2d");c&&(c.clearRect(0,0,h.width,h.height),t.drawMatrixBackground(c,h)),a&&requestAnimationFrame(r)}r(),t.show=function(){const o=this.getMainMenuElement();o&&(o.style.display="flex"),this.updateStartButtonState(),a=!0,r()},window.addEventListener("startGame",()=>{a=!1;const o=h.getContext("2d");o&&o.clearRect(0,0,h.width,h.height)})};window.onresize=()=>{const h=document.getElementById("gameCanvas");h&&(h.width=window.innerWidth,h.height=window.innerHeight)};export{m as L};
