(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(a){if(a.ep)return;a.ep=!0;const i=t(a);fetch(a.href,i)}})();const u={};window.addEventListener("keydown",r=>{u[r.key.toLowerCase()]=!0});window.addEventListener("keyup",r=>{u[r.key.toLowerCase()]=!1});window.addEventListener("mousemove",r=>{r.clientX,r.clientY});window.addEventListener("mousedown",()=>!0);window.addEventListener("mouseup",()=>!1);var f=(r=>(r[r.PISTOL=0]="PISTOL",r[r.SHOTGUN=1]="SHOTGUN",r[r.TRI_SHOT=2]="TRI_SHOT",r[r.RAPID=3]="RAPID",r[r.LASER=4]="LASER",r[r.BEAM=5]="BEAM",r[r.RICOCHET=6]="RICOCHET",r[r.HOMING=7]="HOMING",r[r.RAILGUN=8]="RAILGUN",r[r.PLASMA=9]="PLASMA",r))(f||{});const g={[f.PISTOL]:{id:f.PISTOL,name:"Pistol",icon:"/assets/ui/icons/weapon_0.png",cooldown:60,salvo:1,spread:0,projectile:"bullet_cyan",speed:9,maxLevel:5},[f.SHOTGUN]:{id:f.SHOTGUN,name:"Shotgun",icon:"/assets/ui/icons/weapon_1.png",cooldown:90,salvo:5,spread:.4,projectile:"bullet_cyan",speed:8,maxLevel:5},[f.TRI_SHOT]:{id:f.TRI_SHOT,name:"Tri-Shot",icon:"/assets/ui/icons/weapon_2.png",cooldown:75,salvo:3,spread:.2,projectile:"bullet_cyan",speed:11,maxLevel:5},[f.RAPID]:{id:f.RAPID,name:"Rapid",icon:"/assets/ui/icons/weapon_3.png",cooldown:20,salvo:1,spread:0,projectile:"bullet_cyan",speed:12,maxLevel:5},[f.LASER]:{id:f.LASER,name:"Laser",icon:"/assets/ui/icons/weapon_4.png",cooldown:40,salvo:1,spread:0,projectile:"bullet_cyan",speed:18,maxLevel:5},[f.BEAM]:{id:f.BEAM,name:"Beam",icon:"/assets/ui/icons/weapon_5.png",cooldown:60,salvo:1,spread:0,projectile:"bullet_cyan",speed:20,maxLevel:5},[f.RICOCHET]:{id:f.RICOCHET,name:"Ricochet",icon:"/assets/ui/icons/weapon_6.png",cooldown:80,salvo:1,spread:.1,projectile:"bullet_cyan",speed:9,maxLevel:5},[f.HOMING]:{id:f.HOMING,name:"Homing",icon:"/assets/ui/icons/weapon_7.png",cooldown:100,salvo:1,spread:0,projectile:"bullet_cyan",speed:8,maxLevel:5},[f.RAILGUN]:{id:f.RAILGUN,name:"Railgun",icon:"/assets/ui/icons/weapon_8.png",cooldown:120,salvo:1,spread:0,projectile:"bullet_cyan",speed:25,maxLevel:5},[f.PLASMA]:{id:f.PLASMA,name:"Plasma",icon:"/assets/ui/icons/weapon_9.png",cooldown:70,salvo:3,spread:.3,projectile:"bullet_cyan",speed:14,maxLevel:5}},y=[{id:0,name:"Speed Boost",icon:"/assets/ui/icons/passive_speed.png",description:"Increase movement speed",maxLevel:5},{id:1,name:"Max HP",icon:"/assets/ui/icons/passive_hp.png",description:"Increase maximum HP",maxLevel:5},{id:2,name:"Damage Up",icon:"/assets/ui/icons/passive_damage.png",description:"Increase bullet damage",maxLevel:5},{id:3,name:"Fire Rate",icon:"/assets/ui/icons/passive_fire.png",description:"Decrease weapon cooldown",maxLevel:5},{id:4,name:"AOE On Kill",icon:"/assets/ui/icons/passive_aoe.png",description:"Small explosion on enemy death",maxLevel:1},{id:5,name:"Magnet",icon:"/assets/ui/icons/passive_magnet.png",description:"Attract nearby gems",maxLevel:3},{id:6,name:"Shield",icon:"/assets/ui/icons/passive_shield.png",description:"Chance to block damage",maxLevel:3},{id:7,name:"Crit",icon:"/assets/ui/icons/passive_crit.png",description:"Chance for critical hits",maxLevel:5},{id:8,name:"Piercing",icon:"/assets/ui/icons/passive_pierce.png",description:"Bullets pierce enemies",maxLevel:1},{id:9,name:"Regen",icon:"/assets/ui/icons/passive_regen.png",description:"Regenerate HP over time",maxLevel:5}];function v(r,e,t){switch(e){case 0:r.speed=2+t*.5;break;case 1:r.maxHp=100+t*20,r.hp=Math.min(r.maxHp,r.hp+20);break;case 2:r.bulletDamage=10+t*2;break;case 3:r.fireRateModifier=1+t*.1;break;case 4:r.hasAoeOnKill=!0;break;case 5:r.magnetRadius=50+t*10;break;case 6:r.shieldChance=Math.min(.5,t*.05);break;case 7:r.critChance=Math.min(.5,t*.04),r.critMultiplier=1.5+t*.1;break;case 8:r.piercing=!0;break;case 9:r.regen=t*.5;break}}class b{constructor(e,t){this.radius=8,this.speed=3,this.hp=100,this.maxHp=100,this._exp=0,this.level=1,this.activeWeapons=new Map,this.activePassives=[],this.shootCooldowns=new Map,this.enemyProvider=()=>[],this.fireRateModifier=1,this.bulletDamage=10,this.magnetRadius=50,this.x=e,this.y=t,this.addWeapon(f.PISTOL)}get exp(){return this._exp}set exp(e){this._exp=e,this.levelUpIfNeeded()}levelUpIfNeeded(){for(;this._exp>=this.getNextExp();)this._exp-=this.getNextExp(),this.level++,window.dispatchEvent(new CustomEvent("levelup"))}getNextExp(){return 4+(this.level-1)*3}gainExp(e){this.exp+=e}setEnemyProvider(e){this.enemyProvider=e}addWeapon(e){if(this.activeWeapons.has(e)){const t=this.activeWeapons.get(e);this.activeWeapons.set(e,t+1)}else this.activeWeapons.set(e,1),this.shootCooldowns.set(e,0)}addPassive(e){const t=this.activePassives.find(s=>s.type===e);if(t)t.level++,v(this,y.find(s=>s.name===e)?.id??-1,t.level);else{const s={type:e,level:1};this.activePassives.push(s),v(this,y.find(a=>a.name===e)?.id??-1,s.level)}}setGameContext(e){this.gameContext=e}findNearestEnemy(){const e=this.enemyProvider?this.enemyProvider():[];let t=null,s=Number.POSITIVE_INFINITY;for(const a of e){if(!a||a.active===!1||a.hp!=null&&a.hp<=0)continue;const i=(a.x??0)-(this.x??0),n=(a.y??0)-(this.y??0),o=i*i+n*n;o<s&&(s=o,t=a)}return t}shootAt(e,t){if(!e)return;const s=this.gameContext?.bulletManager??null;if(s&&typeof s.spawnBullet=="function"){const a=g[t];if(a){const i=e.x-this.x,n=e.y-this.y,o=Math.atan2(n,i);a.speed;const l=a.salvo,h=a.spread,c=this.bulletDamage;for(let d=0;d<l;d++){const m=o+(d-(l-1)/2)*h;s.spawnBullet(this.x,this.y,this.x+Math.cos(m)*100,this.y+Math.sin(m)*100,t,c)}}}}update(e){if(window.navigator.userAgent.includes("Mobile"))return;let t=0,s=0;if(u.w&&(s-=1),u.s&&(s+=1),u.a&&(t-=1),u.d&&(t+=1),t!==0||s!==0){const i=Math.sqrt(t*t+s*s);this.x+=t/i*this.speed,this.y+=s/i*this.speed}this.activeWeapons.forEach((i,n)=>{let o=this.shootCooldowns.get(n)??0;if(o--,this.shootCooldowns.set(n,o),o<=0){const l=this.findNearestEnemy();if(l){this.shootAt(l,n);const h=g[n],c=Math.max(1,Math.floor(h.cooldown/this.fireRateModifier));this.shootCooldowns.set(n,c)}}});const a=this.gameContext?.enemyManager?.getGems()??[];for(const i of a){if(!i.active)continue;const n=i.x-this.x,o=i.y-this.y,l=Math.hypot(n,o);l<this.magnetRadius&&(i.x-=n/l*1.5,i.y-=o/l*1.5)}}takeDamage(e){this.hp-=e,this.hp<0&&(this.hp=0)}draw(e){e.save();const t=this.gameContext?.assetLoader?.getImage("player_base");if(t){const a=-this.radius,i=-this.radius;e.translate(this.x,this.y),e.drawImage(t,a,i,this.radius*2,this.radius*2)}else e.shadowColor="#0ff",e.shadowBlur=12,e.beginPath(),e.arc(this.x,this.y,this.radius,0,Math.PI*2),e.fillStyle="#0ff",e.fill();const s=this.activeWeapons.size;if(s>0){let a=Math.PI*2/s,i=0;const n=this.radius+10,o=16;this.activeWeapons.forEach((l,h)=>{const c=g[h];if(c&&c.icon){const d=this.gameContext?.assetLoader?.getImage(c.icon);if(d){const m=n*Math.cos(i),p=n*Math.sin(i);e.drawImage(d,m-o/2,p-o/2,o,o)}}i+=a})}e.restore()}}class M{constructor(e,t,s=1,a){this.enemies=[],this.particleManager=null,this.gems=[],this.assetLoader=null,this.player=e,this.particleManager=t||null,this.assetLoader=a||null;const i=Math.floor(20*s);for(let n=0;n<i;n++)this.enemies.push({x:-1e3,y:-1e3,hp:0,maxHp:0,radius:18,speed:0,active:!1,type:"small",damage:0});for(let n=0;n<50;n++)this.gems.push({x:-9999,y:-9999,vx:0,vy:0,life:0,size:6,value:1,active:!1});this.waves=[{startTime:0,enemyType:"small",count:20,spawnInterval:60,spawned:0,lastSpawnTime:0},{startTime:30,enemyType:"small",count:30,spawnInterval:45,spawned:0,lastSpawnTime:0},{startTime:60,enemyType:"medium",count:15,spawnInterval:90,spawned:0,lastSpawnTime:0},{startTime:90,enemyType:"small",count:50,spawnInterval:30,spawned:0,lastSpawnTime:0},{startTime:120,enemyType:"medium",count:25,spawnInterval:75,spawned:0,lastSpawnTime:0},{startTime:150,enemyType:"large",count:10,spawnInterval:120,spawned:0,lastSpawnTime:0},{startTime:180,enemyType:"small",count:100,spawnInterval:20,spawned:0,lastSpawnTime:0},{startTime:210,enemyType:"medium",count:40,spawnInterval:60,spawned:0,lastSpawnTime:0},{startTime:240,enemyType:"large",count:20,spawnInterval:90,spawned:0,lastSpawnTime:0}]}getEnemies(){return this.enemies.filter(e=>e.active)}getGems(){return this.gems.filter(e=>e.active)}update(e=[],t=0){this.waves.forEach(s=>{t>=s.startTime&&s.spawned<s.count&&t-s.lastSpawnTime>s.spawnInterval/60&&(this.spawnEnemy(s.enemyType,t),s.spawned++,s.lastSpawnTime=t)});for(const s of this.enemies){if(!s.active)continue;const a=this.player.x-s.x,i=this.player.y-s.y,n=Math.hypot(a,i);n>0&&(s.x+=a/n*s.speed,s.y+=i/n*s.speed),Math.hypot(this.player.x-s.x,this.player.y-s.y)<s.radius+this.player.radius&&this.player.takeDamage(s.damage);for(const l of e){if(!l.active)continue;const h=l.x-s.x,c=l.y-s.y;Math.hypot(h,c)<s.radius+l.radius&&(s.hp-=l.damage,l.piercing||(l.active=!1))}s.hp<=0&&(this.spawnGem(s.x,s.y,1),this.particleManager&&this.particleManager.spawn(s.x,s.y,10,"#ff0"),s.active=!1,s.x=-1e3,s.y=-1e3)}for(const s of this.gems){if(!s.active)continue;s.x+=s.vx,s.y+=s.vy,s.life--,s.life<=0&&(s.active=!1,s.x=-9999,s.y=-9999);const a=s.x-this.player.x,i=s.y-this.player.y;Math.hypot(a,i)<this.player.magnetRadius&&(this.player.gainExp(s.value),s.active=!1,this.particleManager&&this.particleManager.spawn(s.x,s.y,8,"#0ff"))}}spawnGem(e,t,s=1){const a=this.gems.find(i=>!i.active);if(!a){this.gems.push({x:e,y:t,vx:(Math.random()-.5)*2,vy:(Math.random()-.5)*2,life:600,size:6,value:s,active:!0});return}a.x=e,a.y=t,a.vx=(Math.random()-.5)*2,a.vy=(Math.random()-.5)*2,a.life=600,a.size=6,a.value=s,a.active=!0}spawnEnemy(e,t){let s=this.enemies.find(d=>!d.active);if(!s){const d={x:-1e3,y:-1e3,hp:0,maxHp:0,radius:18,speed:0,active:!1,type:"small",damage:0};this.enemies.push(d),s=d}const a=Math.random()*Math.PI*2,i=1+Math.floor(t/30),n=250+(i-1)*20,o=700+(i-1)*40,l=n+Math.random()*(o-n),h=this.player.x+Math.cos(a)*l,c=this.player.y+Math.sin(a)*l;s.x=h,s.y=c,s.type=e,s.radius=e==="small"?12:e==="medium"?18:24,s.hp=(e==="small"?20:e==="medium"?40:80)+Math.floor((i-1)*5),s.maxHp=s.hp,s.speed=(e==="small"?1.5:e==="medium"?1:.8)+(i-1)*.1,s.active=!0,s.damage=e==="small"?5:e==="medium"?10:15}draw(e){for(const t of this.enemies){if(!t.active)continue;e.save();const s=this.assetLoader?.getImage(`enemy_${t.type}`);if(s){const i=t.x-t.radius,n=t.y-t.radius;e.drawImage(s,i,n,t.radius*2,t.radius*2)}else e.shadowColor="#f0f",e.shadowBlur=12,e.beginPath(),e.arc(t.x,t.y,t.radius,0,Math.PI*2),e.fillStyle="#f0f",e.fill();e.restore();const a=Math.max(0,t.hp)/t.maxHp;e.save(),e.fillStyle="#333",e.fillRect(t.x-t.radius,t.y-t.radius-6,t.radius*2,4),e.fillStyle="#f00",e.fillRect(t.x-t.radius,t.y-t.radius-6,t.radius*2*a,4),e.restore()}for(const t of this.gems){if(!t.active)continue;e.save();const s=this.assetLoader?.getImage("gem");if(s){const a=t.x-t.size,i=t.y-t.size;e.drawImage(s,a,i,t.size*2,t.size*2)}else e.shadowColor="#0ff",e.shadowBlur=8,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fillStyle="#0ff",e.fill();e.restore()}}getAliveCount(){return!this.enemies||!Array.isArray(this.enemies)?0:this.enemies.filter(e=>e&&e.active!==!1&&(e.hp==null||e.hp>0)).length}}class E{constructor(e,t){this.loader=null,this.player=e,this.loader=t||null}draw(e,t){const s=e.canvas.width,a=e.canvas.height;e.save(),e.font="18px Orbitron, sans-serif",e.fillStyle="#fff";const i=Math.floor(t/60).toString().padStart(2,"0"),n=Math.floor(t%60).toString().padStart(2,"0");e.font="bold 32px Orbitron, sans-serif",e.textAlign="center",e.fillText(`${i}:${n}`,s/2,50),e.textAlign="left",e.font="bold 20px Orbitron, sans-serif",e.fillText(`Level: ${this.player.level}`,20,40);const o=a-60;this.drawBar(e,20,o,s-40,20,this.player.hp/this.player.maxHp,"#ff0000","#550000"),e.fillStyle="#fff",e.fillText(`HP: ${this.player.hp} / ${this.player.maxHp}`,30,o+15);const l=a-30,h=this.player.getNextExp();this.drawBar(e,20,l,s-40,15,this.player.exp/h,"#00ffff","#005555"),e.fillStyle="#fff",e.fillText(`XP: ${this.player.exp} / ${h}`,30,l+12),e.restore()}drawBar(e,t,s,a,i,n,o,l){e.fillStyle=l,e.fillRect(t,s,a,i),e.fillStyle=o,e.fillRect(t,s,a*n,i),e.strokeStyle="#fff",e.strokeRect(t,s,a,i)}drawAliveEnemiesCount(e,t){if(!e)return;e.save(),e.globalAlpha=.85,e.fillStyle="#ffffff",e.font="12px monospace";const s=Math.max(10,e.canvas.width-140);e.fillText(`Enemies: ${t}`,s,20),e.restore()}}class S{constructor(e){this.visible=!1,this.options=[],this.player=e,this._onKeyDown=t=>{this.visible&&(t.key==="1"&&this.applyUpgrade(0),t.key==="2"&&this.applyUpgrade(1),t.key==="3"&&this.applyUpgrade(2),t.key==="Escape"&&this.close())},this._onMouseDown=t=>{this.visible&&this.applyUpgrade(0)},window.addEventListener("keydown",this._onKeyDown),window.addEventListener("mousedown",this._onMouseDown),window.addEventListener("levelup",()=>this.show())}show(){this.generateOptions(),this.visible=!0,window.dispatchEvent(new CustomEvent("upgradeOpen"))}get isVisible(){return this.visible}update(){}generateOptions(){this.options=[];const e=[];for(const s of Object.values(f).filter(a=>typeof a=="number")){const a=g[s];if(!a)continue;const i=this.player.activeWeapons.get(s)||0;i<a.maxLevel&&e.push({type:"weapon",id:s,name:`${a.name} ${i>0?`Lv.${i+1}`:""}`,description:i>0?`Upgrade ${a.name}`:`Unlock ${a.name}`,icon:a.icon||"",currentLevel:i})}for(const s of y){const a=this.player.activePassives.find(n=>n.type===s.name),i=a?a.level:0;i<s.maxLevel&&e.push({type:"passive",id:s.id,name:`${s.name} ${i>0?`Lv.${i+1}`:""}`,description:i>0?`Upgrade ${s.name}`:`Unlock ${s.name}`,icon:s.icon||"",currentLevel:i})}const t=e.sort(()=>.5-Math.random());this.options=t.slice(0,3)}draw(e){if(!this.visible)return;e.save(),e.globalAlpha=.7,e.fillStyle="#000",e.fillRect(0,0,e.canvas.width,e.canvas.height),e.restore();const t=420,s=280,a=(e.canvas.width-t)/2,i=(e.canvas.height-s)/2;e.save(),e.fillStyle="#222",e.fillRect(a,i,t,s),e.strokeStyle="#0ff",e.lineWidth=3,e.strokeRect(a,i,t,s),e.fillStyle="#0ff",e.font="bold 24px Orbitron, sans-serif",e.textAlign="center",e.fillText("CHOOSE UPGRADE",e.canvas.width/2,i+40),e.font="18px Orbitron, sans-serif",e.textAlign="left",this.options.forEach((n,o)=>{const l=i+80+o*60,h=a+30;e.fillStyle="#333",e.fillRect(h,l-20,t-60,50),e.strokeStyle="#0ff",e.strokeRect(h,l-20,t-60,50),e.fillStyle="#fff",e.fillRect(h+10,l-10,30,30),e.fillStyle="#0ff",e.fillText(`${o+1}. ${n.name}`,h+50,l),e.font="14px Orbitron, sans-serif",e.fillStyle="#aaa",e.fillText(n.description,h+50,l+20)}),e.restore()}applyUpgrade(e){const t=this.options[e];t&&(t.type==="weapon"?this.player.addWeapon(t.id):t.type==="passive"&&this.player.addPassive(y.find(s=>s.id===t.id)?.name??""),this.close())}close(){this.visible&&(this.visible=!1,window.dispatchEvent(new CustomEvent("upgradeClose")))}}class I{constructor(){this.progress=0,this.active=!1,this.onComplete=null}start(e){this.progress=0,this.active=!0,this.onComplete=e}draw(e,t){this.active&&(e.save(),e.globalAlpha=1-this.progress/100,e.fillStyle="#000",e.fillRect(0,0,t.width,t.height),e.globalAlpha=1,e.font="bold 48px Orbitron, sans-serif",e.fillStyle="#0ff",e.textAlign="center",e.fillText("Welcome to CYBER SURVIVOR",t.width/2,t.height/2),e.font="24px Orbitron, sans-serif",e.fillText("Survive the neon onslaught...",t.width/2,t.height/2+60),e.restore(),this.progress++,this.progress>100&&(this.active=!1,this.onComplete&&this.onComplete()))}}class A{constructor(e,t,s=1){this.boss=null,this.spawnTimer=1800,this.particleManager=null,this.difficulty=1,this.player=e,this.particleManager=t||null,this.difficulty=s,this.spawnTimer=Math.max(600,1800-(this.difficulty-1)*200)}update(){if(!this.boss)this.spawnTimer--,this.spawnTimer<=0&&(this.spawnBoss(),this.spawnTimer=Math.max(600,1800-(this.difficulty-1)*200));else if(this.boss.state==="TELEGRAPH")this.boss.telegraph--,this.particleManager&&this.particleManager.spawn(this.boss.x,this.boss.y,4,"#f55"),this.boss.telegraph<=0&&(this.boss.state="ACTIVE",this.boss.attackTimer=60);else if(this.boss&&this.boss.state==="ACTIVE"){const e=this.player.x-this.boss.x,t=this.player.y-this.boss.y,s=Math.hypot(e,t);s>0&&(this.boss.x+=e/s*1.2,this.boss.y+=t/s*1.2),this.boss.attackTimer--,this.boss.attackTimer<=0&&(this.launchAttackWave(),this.boss.attackTimer=Math.max(30,60-(this.difficulty-1)*10)),this.boss.hp<=0&&(this.boss.state="DEAD")}}spawnBoss(){this.boss={x:Math.random()*window.innerWidth,y:Math.random()*window.innerHeight,hp:500+(this.difficulty-1)*200,radius:48,active:!0,telegraph:120,state:"TELEGRAPH",attackTimer:0}}launchAttackWave(){if(!this.boss)return;this.particleManager&&this.particleManager.spawn(this.boss.x,this.boss.y,12,"#f90");const e=new CustomEvent("bossAttack",{detail:{x:this.boss.x,y:this.boss.y,intensity:this.difficulty}});window.dispatchEvent(e)}draw(e){if(this.boss){if(this.boss.state==="TELEGRAPH"){const t=this.boss.telegraph%60/60;e.save(),e.strokeStyle=`rgba(255,0,0,${.6+.4*t})`,e.lineWidth=6,e.beginPath(),e.arc(this.boss.x,this.boss.y,this.boss.radius+12*(1-t),0,Math.PI*2),e.stroke(),e.restore()}else if(this.boss.state==="ACTIVE"){e.save(),e.fillStyle="#222",e.fillRect(this.boss.x-60,this.boss.y-this.boss.radius-18,120,8),e.fillStyle="#f00";const t=Math.max(0,this.boss.hp)/(500+(this.difficulty-1)*200);e.fillRect(this.boss.x-60,this.boss.y-this.boss.radius-18,120*t,8),e.restore(),e.save(),e.shadowColor="#ff0",e.shadowBlur=24,e.beginPath(),e.arc(this.boss.x,this.boss.y,this.boss.radius,0,Math.PI*2),e.fillStyle="#ff0",e.fill(),e.restore()}}}getActiveBoss(){return this.boss&&this.boss.state==="ACTIVE"?this.boss:null}setDifficulty(e){this.difficulty=e,this.spawnTimer=Math.max(600,1800-(this.difficulty-1)*200)}}class x{constructor(e){this.bullets=[],this.assetLoader=e}update(){for(const e of this.bullets)e.active&&(e.x+=e.vx,e.y+=e.vy,e.life--,e.life<=0&&(e.active=!1))}draw(e){for(const t of this.bullets){if(!t.active)continue;e.save();const s=this.assetLoader.getImage(t.projectileImageKey);if(s){const a=t.x-t.radius,i=t.y-t.radius;e.drawImage(s,a,i,t.radius*2,t.radius*2)}else e.shadowColor="#0ff",e.shadowBlur=8,e.beginPath(),e.arc(t.x,t.y,t.radius,0,Math.PI*2),e.fillStyle="#0ff",e.fill();e.restore()}}spawnBullet(e,t,s,a,i,n){const o=g[i]??g[f.PISTOL],l=s-e,h=a-t,c=Math.atan2(h,l),d=o?.speed??2,m=o?.projectile??"bullet_cyan";let p=this.bullets.find(w=>!w.active);p?(p.x=e,p.y=t,p.vx=Math.cos(c)*d,p.vy=Math.sin(c)*d,p.life=90,p.active=!0,p.radius=4,p.damage=n,p.weaponType=i,p.projectileImageKey=m):this.bullets.push({x:e,y:t,vx:Math.cos(c)*d,vy:Math.sin(c)*d,radius:4,life:90,active:!0,damage:n,speed:d,weaponType:i,projectileImageKey:m})}}class C{constructor(e=100){this.pool=[];for(let t=0;t<e;t++)this.pool.push(this.createDead())}createDead(){return{x:-9999,y:-9999,vx:0,vy:0,life:0,size:2,color:"#fff",active:!1}}spawn(e,t,s=8,a="#ff0"){for(let i=0;i<s;i++){const n=this.pool.find(o=>!o.active);if(n)this.activate(n,e,t,a);else{const o=this.createDead();this.pool.push(o),this.activate(o,e,t,a)}}}activate(e,t,s,a){e.x=t+(Math.random()-.5)*8,e.y=s+(Math.random()-.5)*8;const i=2+Math.random()*2,n=Math.random()*Math.PI*2;e.vx=Math.cos(n)*i,e.vy=Math.sin(n)*i,e.life=20+Math.floor(Math.random()*20),e.size=1+Math.random()*3,e.color=a,e.active=!0}update(){for(const e of this.pool)e.active&&(e.x+=e.vx,e.y+=e.vy,e.vx*=.98,e.vy*=.98,e.life--,e.life<=0&&(e.active=!1,e.x=-9999,e.y=-9999))}draw(e){for(const t of this.pool)t.active&&(e.save(),e.globalAlpha=Math.max(.2,t.life/40),e.fillStyle=t.color,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill(),e.restore())}}class L{constructor(){this.cache={},this.manifest=null}getImage(e){return this.cache[e]}getName(e){return(e.split("/").pop()||e).split(".")[0]}getDimsForPath(e){switch(this.getName(e)){case"player_base":return{w:64,h:64};case"enemy_small":return{w:48,h:48};case"enemy_medium":return{w:64,h:64};case"enemy_large":return{w:96,h:96};case"boss_phase1":case"boss_phase2":case"boss_phase3":return{w:256,h:256};case"bullet_cyan":return{w:16,h:16};case"boss_shot_set":return{w:24,h:24};case"particles_sheet":return{w:64,h:64};case"hp_bar_bg":return{w:128,h:16};case"hp_bar_fill":return{w:128,h:16};case"upgrade_speed":case"upgrade_hp":return{w:64,h:64};default:return{w:64,h:64}}}createPlaceholderImage(e,t,s){const a=document.createElement("canvas");a.width=e,a.height=t;const i=a.getContext("2d");i.fillStyle="#333",i.fillRect(0,0,e,t),i.strokeStyle="#0ff",i.lineWidth=2,i.strokeRect(0,0,e-1,t-1),i.fillStyle="#fff",i.font="bold 12px sans-serif",i.textAlign="center",i.textBaseline="middle",i.fillText(s,e/2,t/2);const n=new Image;return n.src=a.toDataURL(),n}async loadManifest(e="/assets/manifest.json"){const t=await fetch(e);return this.manifest=await t.json(),this.manifest}async loadImage(e){if(this.cache[e])return this.cache[e];const t=new Image;try{return await new Promise((s,a)=>{t.onload=()=>s(!0),t.onerror=()=>a(new Error("Image load failed: "+e)),t.src=e}),this.cache[e]=t,t}catch{const{w:s,h:a}=this.getDimsForPath(e),i=this.getName(e),n=this.createPlaceholderImage(s,a,i);return this.cache[e]=n,n}}async loadAllFromManifest(e="/assets"){this.manifest||await this.loadManifest(e+"/manifest.json");const t=[],s=i=>{for(const n in i){const o=i[n];o&&o.file?t.push("/"+o.file):typeof o=="object"&&s(o)}};s(this.manifest);const a=t.map(i=>this.loadImage(i));return await Promise.all(a),this.manifest}drawFrame(e,t,s,a,i,n,o,l){const h=this.cache[t];h&&e.drawImage(h,s,a,i,n,o-i/2,l-n/2,i,n)}renderAnimatedSprite(e,t,s,a,i,n,o){const l=this.cache[t];if(!l)return;const h=n??64,c=o??64,d=Math.max(1,Math.floor(l.width/h)),m=s%d,p=Math.floor(s/d);this.drawFrame(e,t,m*h,p*c,h,c,a,i)}renderSpriteFrame(e,t,s,a,i,n,o,l){this.drawFrame(e,t,s,a,i,n,o,l)}}class P{constructor(e){this.characters=[{name:"Cyber Runner",description:"A fast and agile character with high evasion.",stats:{hp:80,speed:2.4,damage:10},look:"player_base"},{name:"Tech Warrior",description:"A durable character with strong defenses.",stats:{hp:120,speed:1.6,damage:15},look:"player_base"},{name:"Data Sorcerer",description:"A character specializing in powerful ranged attacks.",stats:{hp:90,speed:2,damage:20},look:"player_base"},{name:"Shadow Operative",description:"Stealthy and precise, excels in critical strikes.",stats:{hp:70,speed:2.2,damage:18},look:"player_base"},{name:"Bio-Engineer",description:"Supports allies and debuffs enemies.",stats:{hp:100,speed:1.8,damage:12},look:"player_base"},{name:"Rogue Hacker",description:"Disrupts enemy systems and controls the battlefield.",stats:{hp:85,speed:2.1,damage:14},look:"player_base"},{name:"Heavy Gunner",description:"Unloads a barrage of sustained fire.",stats:{hp:130,speed:1.5,damage:17},look:"player_base"},{name:"Psionic Weaver",description:"Manipulates psychic energy for devastating effects.",stats:{hp:95,speed:1.9,damage:22},look:"player_base"},{name:"Wasteland Scavenger",description:"Resourceful and adaptable, thrives in harsh environments.",stats:{hp:110,speed:1.7,damage:13},look:"player_base"},{name:"Neural Nomad",description:"A wanderer with enhanced cognitive abilities.",stats:{hp:75,speed:2.3,damage:16},look:"player_base"}],this.selectedCharacterIndex=0,this.hoveredCharacterIndex=null,this.gridCols=5,this.gridRows=2,this.charBoxSize=120,this.assetLoader=e}draw(e,t){e.save(),e.fillStyle="#000",e.fillRect(0,0,t.width,t.height),e.fillStyle="#0f0",e.font="bold 48px Orbitron, sans-serif",e.textAlign="center",e.fillText("CHARACTER SELECTION",t.width/2,80);const s=(t.width-this.gridCols*this.charBoxSize)/2,a=150;this.characters.forEach((h,c)=>{const d=c%this.gridCols,m=Math.floor(c/this.gridCols),p=s+d*this.charBoxSize,w=a+m*this.charBoxSize;e.strokeStyle="#333",c===this.selectedCharacterIndex?e.strokeStyle="#0ff":c===this.hoveredCharacterIndex&&(e.strokeStyle="#fff"),e.lineWidth=3,e.strokeRect(p,w,this.charBoxSize,this.charBoxSize),e.fillStyle="#555",e.fillRect(p+3,w+3,this.charBoxSize-6,this.charBoxSize-6),e.fillStyle="#0f0",e.font="16px Orbitron, sans-serif",e.textAlign="center",e.fillText(h.name,p+this.charBoxSize/2,w+this.charBoxSize/2)});const i=this.characters[this.selectedCharacterIndex],n=t.width/2,o=a+this.gridRows*this.charBoxSize+50;e.fillStyle="#0ff",e.font="bold 36px Orbitron, sans-serif",e.fillText(i.name,n,o),e.font="20px Orbitron, sans-serif",e.fillText(i.description,n,o+40),e.font="24px Orbitron, sans-serif",e.textAlign="left";let l=o+80;e.fillText(`HP: ${i.stats.hp}`,n-100,l),l+=30,e.fillText(`Speed: ${i.stats.speed}`,n-100,l),l+=30,e.fillText(`Damage: ${i.stats.damage}`,n-100,l),e.textAlign="center",e.font="20px Orbitron, sans-serif",e.fillText("Use Arrows to Select, Enter to Confirm",t.width/2,t.height-40),e.restore()}handleInput(e){let t=this.selectedCharacterIndex;e.key==="ArrowLeft"?t--:e.key==="ArrowRight"?t++:e.key==="ArrowUp"?t-=this.gridCols:e.key==="ArrowDown"&&(t+=this.gridCols),t<0?t=this.characters.length+t:t>=this.characters.length&&(t=t-this.characters.length),this.selectedCharacterIndex=t}handleMouseMove(e,t,s){const a=(s.width-this.gridCols*this.charBoxSize)/2,i=150;let n=null;this.characters.forEach((o,l)=>{const h=l%this.gridCols,c=Math.floor(l/this.gridCols),d=a+h*this.charBoxSize,m=i+c*this.charBoxSize;e>=d&&e<=d+this.charBoxSize&&t>=m&&t<=m+this.charBoxSize&&(n=l)}),this.hoveredCharacterIndex=n,this.hoveredCharacterIndex!==null&&(this.selectedCharacterIndex=this.hoveredCharacterIndex)}getSelectedCharacter(){return this.characters[this.selectedCharacterIndex]}update(){}}class R{constructor(e,t){this.gameTime=0,this.worldW=4e3*100,this.worldH=4e3*100,this.camX=0,this.camY=0,this.camLerp=.12,this.canvas=e,this.ctx=e.getContext("2d"),this.state="MAIN_MENU",this.gameTime=0,this.assetLoader=new L,this.particleManager=new C(160),this.player=new b(e.width/2,e.height/2),this.player.radius=18,this.player.x=this.worldW/2,this.player.y=this.worldH/2,this.enemyManager=new M(this.player,this.particleManager,1,this.assetLoader),this.bossManager=new A(this.player,this.particleManager),this.bulletManager=new x(this.assetLoader),this.hud=new E(this.player,this.assetLoader),this.upgradePanel=new S(this.player),this.cinematic=new I,this.mainMenu=t,this.characterSelectPanel=new P(this.assetLoader),this.player.setEnemyProvider(()=>this.enemyManager.getEnemies()),this.player.setGameContext(this),this.initInput(),window.addEventListener("upgradeOpen",()=>{this.state==="GAME"&&(this.state="UPGRADE_MENU")}),window.addEventListener("upgradeClose",()=>{this.state==="UPGRADE_MENU"&&(this.state="GAME")})}worldToScreenX(e){return e-this.camX+this.canvas.width/2}worldToScreenY(e){return e-this.camY+this.canvas.height/2}async init(){try{await this.assetLoader.loadAllFromManifest("/assets")}catch{}}start(){requestAnimationFrame(()=>this.loop())}updateCamera(){const e=Math.max(0,Math.min(this.worldW,this.player.x)),t=Math.max(0,Math.min(this.worldH,this.player.y));this.camX+=(e-this.camX)*this.camLerp,this.camY+=(t-this.camY)*this.camLerp}loop(){switch(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.state){case"MENU":break;case"MAIN_MENU":this.mainMenu.show();break;case"CHARACTER_SELECT":this.characterSelectPanel.draw(this.ctx,this.canvas);break;case"CINEMATIC":this.cinematic.draw(this.ctx,this.canvas);break;case"GAME":this.updateGame(),this.drawGame();break;case"PAUSE":this.drawPause();break;case"GAME_OVER":this.drawGameOver();break;case"UPGRADE_MENU":this.drawGame(),this.upgradePanel.draw(this.ctx);break}requestAnimationFrame(()=>this.loop())}drawPause(){this.ctx.save(),this.ctx.globalAlpha=.7,this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,this.ctx.fillStyle="#fff",this.ctx.font="bold 48px Orbitron, sans-serif",this.ctx.textAlign="center",this.ctx.fillText("PAUSED",this.canvas.width/2,this.canvas.height/2),this.ctx.font="24px Orbitron, sans-serif",this.ctx.fillText("Tap or press Escape to Resume",this.canvas.width/2,this.canvas.height/2+40),this.ctx.restore()}drawGameOver(){this.ctx.save(),this.ctx.globalAlpha=.7,this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,this.ctx.fillStyle="#f00",this.ctx.font="bold 64px Orbitron, sans-serif",this.ctx.textAlign="center",this.ctx.fillText("GAME OVER",this.canvas.width/2,this.canvas.height/2-30),this.ctx.fillStyle="#fff",this.ctx.font="24px Orbitron, sans-serif",this.ctx.fillText("Press Enter to Restart",this.canvas.width/2,this.canvas.height/2+30),this.ctx.restore()}updateGame(){if(this.gameTime+=1/60,this.player.update(1),this.player.hp<=0){this.state="GAME_OVER";return}this.player.x=Math.max(0,Math.min(this.worldW,this.player.x)),this.player.y=Math.max(0,Math.min(this.worldH,this.player.y)),this.bulletManager.update(),this.enemyManager.update(this.bulletManager.bullets,this.gameTime),this.bossManager.update(),this.particleManager.update(),this.upgradePanel.update(),this.updateCamera()}drawGame(){const t=Math.floor((this.camX-this.canvas.width/2)/128)*128,s=Math.floor((this.camY-this.canvas.height/2)/128)*128;for(let o=t;o<t+this.canvas.width+128;o+=128)for(let l=s;l<s+this.canvas.height+128;l+=128){const h=this.worldToScreenX(o),c=this.worldToScreenY(l),d=(o/128+l/128)%2===0;this.ctx.save(),this.ctx.fillStyle=d?"#0b0b0b":"#0f0f0f",this.ctx.fillRect(h,c,126,126),this.ctx.restore()}this.ctx.save();const a=this.canvas.width/2-this.camX,i=this.canvas.height/2-this.camY;this.ctx.translate(a,i),this.player.draw(this.ctx),this.bulletManager.draw(this.ctx),this.enemyManager.draw(this.ctx),this.bossManager.draw(this.ctx),this.particleManager.draw(this.ctx),this.ctx.restore(),this.hud.draw(this.ctx,this.gameTime),this.upgradePanel.draw(this.ctx);const n=this.enemyManager?.getAliveCount?.()??0;this.hud?.drawAliveEnemiesCount(this.ctx,n)}initInput(){window.addEventListener("keydown",e=>{this.state==="CHARACTER_SELECT"?this.characterSelectPanel.handleInput(e):this.state==="GAME"&&e.key==="Escape"?(this.state="PAUSE",this.mainMenu.hide()):this.state==="PAUSE"&&e.key==="Escape"?this.state="GAME":this.state==="GAME_OVER"&&e.key==="Enter"&&this.resetGame()}),window.addEventListener("startGame",()=>{this.state==="MAIN_MENU"&&(this.mainMenu.hide(),this.state="CINEMATIC",this.cinematic.start(()=>{this.state="GAME"}))}),window.addEventListener("showCharacterSelect",()=>{this.state==="MAIN_MENU"&&(this.mainMenu.hide(),this.state="CHARACTER_SELECT")}),this.canvas.addEventListener("touchstart",e=>{this.state==="MENU"?this.state="MAIN_MENU":this.state==="MAIN_MENU"||(this.state==="CHARACTER_SELECT"?(this.state="CINEMATIC",this.cinematic.start(()=>{this.state="GAME"})):this.state==="PAUSE"?this.state="GAME":this.state==="GAME_OVER"&&this.resetGame())}),this.canvas.addEventListener("mousemove",e=>{if(this.state==="CHARACTER_SELECT"){const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,a=e.clientY-t.top;this.characterSelectPanel.handleMouseMove(s,a,this.canvas)}})}resetGame(e){this.player=new b(this.canvas.width/2,this.canvas.height/2),this.player.radius=18,this.player.x=this.worldW/2,this.player.y=this.worldH/2,e&&(this.player.hp=e.hp,this.player.speed=e.speed),this.enemyManager=new M(this.player,this.particleManager,1,this.assetLoader),this.bossManager=new A(this.player,this.particleManager),this.bulletManager=new x(this.assetLoader),this.hud=new E(this.player,this.assetLoader),this.upgradePanel=new S(this.player),this.player.setEnemyProvider(()=>this.enemyManager.getEnemies()),this.player.setGameContext(this),this.gameTime=0,this.state="GAME"}}class _{constructor(){this.mainMenuElement=document.getElementById("main-menu"),this.startGameButton=document.getElementById("start-game-btn"),this.characterSelectButton=document.getElementById("character-select-btn"),this.startGameButton&&this.startGameButton.addEventListener("click",()=>{window.dispatchEvent(new CustomEvent("startGame"))}),this.characterSelectButton&&this.characterSelectButton.addEventListener("click",()=>{window.dispatchEvent(new CustomEvent("showCharacterSelect"))})}show(){this.mainMenuElement&&(this.mainMenuElement.style.display="flex")}hide(){this.mainMenuElement&&(this.mainMenuElement.style.display="none")}draw(e,t){}update(){}}window.onload=async()=>{const r=document.getElementById("gameCanvas");if(!r){console.error('Canvas element with ID "gameCanvas" not found.');return}r.width=window.innerWidth,r.height=window.innerHeight,r.style.position="absolute",r.style.top="0",r.style.left="0",r.style.zIndex="-1";const e=new _,t=new R(r,e);await t.init(),t.start(),e.show()};window.onresize=()=>{const r=document.getElementById("gameCanvas");r&&(r.width=window.innerWidth,r.height=window.innerHeight)};
